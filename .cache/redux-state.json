{
  "nodes": {
    "SitePage /dev-404-page/": {
      "jsonName": "dev-404-page-5f9",
      "internalComponentName": "ComponentDev404Page",
      "path": "/dev-404-page/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/.cache/dev-404-page.js",
      "componentChunkName": "component---cache-dev-404-page-js",
      "context": {},
      "pluginCreator___NODE": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
      "pluginCreatorId": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/.cache/dev-404-page.js",
      "id": "SitePage /dev-404-page/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "15ce79a40f82589e0061be32da159562",
        "description": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
        "owner": "internal-data-bridge"
      }
    },
    "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "id": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
      "name": "dev-404-page",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "packageJson": {
        "name": "dev-404-page",
        "description": "Internal plugin to add a 404 page in development with helpful information",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "898e9259b84a08807b3f07052d0cca05",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "1fc32581-893a-55e8-8927-bcd667e2b700": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "id": "1fc32581-893a-55e8-8927-bcd667e2b700",
      "name": "load-babel-config",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPreBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "packageJson": {
        "name": "load-babel-config",
        "description": "Internal plugin that handles loading Babel configs",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "5698bd9d8c42389cf2b0dd5dd5181b65",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "a5079d69-ba80-53dc-82f9-0f440bd5448c": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "id": "a5079d69-ba80-53dc-82f9-0f440bd5448c",
      "name": "internal-data-bridge",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "packageJson": {
        "name": "internal-data-bridge",
        "description": "An internal Gatsby plugin which creates data nodes from internal data",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "2c465127eda41b343bef606913b61272",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "f795702c-a3b8-5a88-88ee-5d06019d44fa": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/prod-404",
      "id": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
      "name": "prod-404",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/prod-404",
      "packageJson": {
        "name": "prod-404",
        "description": "Internal plugin to detect various flavors of 404 pages and ensure there's a 404.html path created as well to ensure compatability with static hosts",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "3dce0e8e6a64b8e63b2eada27e55a918",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "84dad27f-1d44-51fc-ac56-4db2e5222995": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/query-runner",
      "id": "84dad27f-1d44-51fc-ac56-4db2e5222995",
      "name": "query-runner",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/query-runner",
      "packageJson": {
        "name": "query-runner",
        "description": "Internal plugin for running queries",
        "version": "1.0.0",
        "main": "index.js",
        "author": "",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "09c1bba5458641f613190466513df214",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "6f4b2fa9-66b5-5205-a03f-140005a2cfe5": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/webpack-theme-component-shadowing",
      "id": "6f4b2fa9-66b5-5205-a03f-140005a2cfe5",
      "name": "webpack-theme-component-shadowing",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateWebpackConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby/dist/internal-plugins/webpack-theme-component-shadowing",
      "packageJson": {
        "name": "webpack-theme-component-shadowing",
        "description": "An internal Gatsby plugin which handles configuring webpack to ensure theme components fall back from the user's site to theme modules.",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Chris Biscardi <chris@christopherbiscardi.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "20ffc62da2fb016389114521aa46dbe7",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "1943ff2f-9c0c-558d-8d0c-006603e8106a": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-react-helmet",
      "id": "1943ff2f-9c0c-558d-8d0c-006603e8106a",
      "name": "gatsby-plugin-react-helmet",
      "version": "3.0.2",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-react-helmet",
      "packageJson": {
        "name": "gatsby-plugin-react-helmet",
        "description": "Manage document head data with react-helmet. Provides drop-in server rendering support for Gatsby.",
        "version": "3.0.2",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "react-helmet",
          "seo",
          "document",
          "head",
          "title",
          "meta",
          "link",
          "script",
          "base",
          "noscript",
          "style"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "matthews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.2"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "react-helmet",
            "version": ">=5.1.3"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "ea2b8a76a90dd856e6b4d1e91886a2fd",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "2915861f-c9a1-59ae-98ab-aef4ee9bd964": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-source-filesystem",
      "id": "2915861f-c9a1-59ae-98ab-aef4ee9bd964",
      "name": "gatsby-source-filesystem",
      "version": "2.0.23",
      "pluginOptions": {
        "plugins": [],
        "name": "images",
        "path": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "2.0.23",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "better-queue",
            "version": "^3.8.7"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^2.1.2"
          },
          {
            "name": "file-type",
            "version": "^10.2.0"
          },
          {
            "name": "fs-extra",
            "version": "^5.0.0"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^2.2.0"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "progress",
            "version": "^1.1.8"
          },
          {
            "name": "read-chunk",
            "version": "^3.0.0"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          },
          {
            "name": "xstate",
            "version": "^3.1.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "54c5bda55ffe5ead18dfb2f1fc6b8b6a",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "1c4ea721-b4cb-5ba9-8255-8c2fa314b0ff": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-source-filesystem",
      "id": "1c4ea721-b4cb-5ba9-8255-8c2fa314b0ff",
      "name": "gatsby-source-filesystem",
      "version": "2.0.23",
      "pluginOptions": {
        "plugins": [],
        "name": "siteDocs",
        "path": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/siteDocs"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "2.0.23",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "better-queue",
            "version": "^3.8.7"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^2.1.2"
          },
          {
            "name": "file-type",
            "version": "^10.2.0"
          },
          {
            "name": "fs-extra",
            "version": "^5.0.0"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^2.2.0"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "progress",
            "version": "^1.1.8"
          },
          {
            "name": "read-chunk",
            "version": "^3.0.0"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          },
          {
            "name": "xstate",
            "version": "^3.1.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "6015f38f6864eb19a357207d022b5c0f",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "9f28d07a-37b6-51d1-b2d0-5071b57d6dd2": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-transformer-remark",
      "id": "9f28d07a-37b6-51d1-b2d0-5071b57d6dd2",
      "name": "gatsby-transformer-remark",
      "version": "2.1.15",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-transformer-remark",
      "packageJson": {
        "name": "gatsby-transformer-remark",
        "description": "Gatsby transformer plugin for Markdown using the Remark library and ecosystem",
        "version": "2.1.15",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "markdown",
          "remark"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "gray-matter",
            "version": "^4.0.0"
          },
          {
            "name": "hast-util-raw",
            "version": "^4.0.0"
          },
          {
            "name": "hast-util-to-html",
            "version": "^4.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "mdast-util-to-hast",
            "version": "^3.0.0"
          },
          {
            "name": "mdast-util-toc",
            "version": "^2.0.1"
          },
          {
            "name": "remark",
            "version": "^9.0.0"
          },
          {
            "name": "remark-parse",
            "version": "^5.0.0"
          },
          {
            "name": "remark-retext",
            "version": "^3.1.0"
          },
          {
            "name": "remark-stringify",
            "version": "^5.0.0"
          },
          {
            "name": "retext-english",
            "version": "^3.0.0"
          },
          {
            "name": "sanitize-html",
            "version": "^1.18.2"
          },
          {
            "name": "underscore.string",
            "version": "^3.3.4"
          },
          {
            "name": "unified",
            "version": "^6.1.5"
          },
          {
            "name": "unist-util-remove-position",
            "version": "^1.1.2"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.33"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "2173805e14a88f78cbeefba7abb827d8",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "4f20e0e3-2401-5443-9774-455ba0602046": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-manifest",
      "id": "4f20e0e3-2401-5443-9774-455ba0602046",
      "name": "gatsby-plugin-manifest",
      "version": "2.0.9",
      "pluginOptions": {
        "plugins": [],
        "name": "gatsby-starter-default",
        "short_name": "starter",
        "start_url": "/",
        "background_color": "#16161d",
        "theme_color": "#16161d",
        "display": "minimal-ui",
        "icon": "./public/icons/favicon-256.png"
      },
      "nodeAPIs": [
        "onPostBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-manifest",
      "packageJson": {
        "name": "gatsby-plugin-manifest",
        "description": "Gatsby plugin which adds a manifest.webmanifest to make sites progressive web apps",
        "version": "2.0.9",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "icons",
          "manifest.webmanifest",
          "progressive-web-app",
          "pwa"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "sharp",
            "version": "^0.21.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.2"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "4c094594d2620209d4c44c372b575936",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "54d0fd21-71eb-5f71-bda2-f9c638c048ad": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-styled-components",
      "id": "54d0fd21-71eb-5f71-bda2-f9c638c048ad",
      "name": "gatsby-plugin-styled-components",
      "version": "3.0.4",
      "pluginOptions": {
        "plugins": [],
        "displayName": false
      },
      "nodeAPIs": [
        "onCreateBabelConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "wrapRootElement",
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-styled-components",
      "packageJson": {
        "name": "gatsby-plugin-styled-components",
        "description": "Gatsby plugin to add support for styled components",
        "version": "3.0.4",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "styled-components"
        ],
        "author": {
          "name": "Guten Ye",
          "email": "ywzhaifei@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          }
        ],
        "peerDependencies": [
          {
            "name": "babel-plugin-styled-components",
            "version": ">1.5.0"
          },
          {
            "name": "gatsby",
            "version": ">=2.0.32"
          },
          {
            "name": "styled-components",
            "version": ">= 2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "1fa187c8af607c0b821c4571ddf1e43b",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "b1674f69-3dee-5cf8-8a38-a16667a563b8": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-emotion",
      "id": "b1674f69-3dee-5cf8-8a38-a16667a563b8",
      "name": "gatsby-plugin-emotion",
      "version": "3.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateBabelConfig"
      ],
      "browserAPIs": [
        "wrapRootElement"
      ],
      "ssrAPIs": [
        "replaceRenderer"
      ],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-emotion",
      "packageJson": {
        "name": "gatsby-plugin-emotion",
        "description": "Gatsby plugin to add support for Emotion",
        "version": "3.0.1",
        "main": "index.js",
        "keywords": [
          "emotion",
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Tegan Churchill",
          "email": "churchill.tegan@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/plugin-transform-react-jsx",
            "version": "^7.1.6"
          },
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "babel-plugin-emotion",
            "version": "^10.0.0"
          },
          {
            "name": "babel-plugin-jsx-pragmatic",
            "version": "^1.0.2"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "@emotion/core",
            "version": "^10.0.0"
          },
          {
            "name": "emotion",
            "version": "^10.0.0"
          },
          {
            "name": "emotion-server",
            "version": "^10.0.0"
          },
          {
            "name": "gatsby",
            "version": ">2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "6804a59106c5b6de0a3f3c2f0df89f39",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "6fcbc6fa-0567-5499-9f35-d67545707a85": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-source-contentful",
      "id": "6fcbc6fa-0567-5499-9f35-d67545707a85",
      "name": "gatsby-source-contentful",
      "version": "2.0.16",
      "pluginOptions": {
        "plugins": [],
        "spaceId": "u434ytvnd3bo",
        "accessToken": "c2ee615c4e6ffed867ae0acdf8cb0e4b1f34322fda5a2388c9aa18f833af6b63",
        "host": "cdn.contentful.com",
        "environment": "master"
      },
      "nodeAPIs": [
        "setFieldsOnGraphQLNodeType",
        "sourceNodes",
        "onPreExtractQueries"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-source-contentful",
      "packageJson": {
        "name": "gatsby-source-contentful",
        "description": "Gatsby source plugin for building websites using the Contentful CMS as a data source",
        "version": "2.0.16",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "gatsby-source-plugin"
        ],
        "author": {
          "name": "Marcus Ericsson",
          "email": "mericsson@gmail.com",
          "url": "mericsson.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "axios",
            "version": "^0.18.0"
          },
          {
            "name": "base64-img",
            "version": "^1.0.3"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "contentful",
            "version": "^6.1.0"
          },
          {
            "name": "deep-map",
            "version": "^1.5.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.2"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^2.0.14"
          },
          {
            "name": "is-online",
            "version": "^7.0.0"
          },
          {
            "name": "json-stringify-safe",
            "version": "^5.0.1"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "qs",
            "version": "^6.4.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.33"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "9e19caa03a8b42854458f4fea32ad9e0",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "bba7208d-9d47-56a0-bdfd-c98bb487efb7": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-google-analytics",
      "id": "bba7208d-9d47-56a0-bdfd-c98bb487efb7",
      "name": "gatsby-plugin-google-analytics",
      "version": "2.0.8",
      "pluginOptions": {
        "plugins": [],
        "trackingId": "UA-134770666-1",
        "head": true
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onRouteUpdate"
      ],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-google-analytics",
      "packageJson": {
        "name": "gatsby-plugin-google-analytics",
        "description": "Gatsby plugin to add google analytics onto a site",
        "version": "2.0.8",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "google analytics"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "aae0fdd17cbfc1b9a0f58f363e8801b7",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "7374ebf2-d961-52ee-92a2-c25e7cb387a9": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode",
      "id": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "name": "default-site-plugin",
      "version": "f4708fac9e4a5fa9f1fe0c62037784d9",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode",
      "packageJson": {
        "name": "gatsby-starter-default",
        "description": "Gatsby default starter",
        "version": "1.0.0",
        "keywords": [
          "gatsby"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "@emotion/core",
            "version": "^10.0.4"
          },
          {
            "name": "@emotion/styled",
            "version": "^10.0.4"
          },
          {
            "name": "babel-plugin-styled-components",
            "version": "^1.9.2"
          },
          {
            "name": "emotion",
            "version": "^10.0.4"
          },
          {
            "name": "emotion-server",
            "version": "^10.0.4"
          },
          {
            "name": "emotion-theming",
            "version": "^10.0.6"
          },
          {
            "name": "gatsby",
            "version": "^2.1.18"
          },
          {
            "name": "gatsby-image",
            "version": "^2.0.20"
          },
          {
            "name": "gatsby-plugin-emotion",
            "version": "^3.0.1"
          },
          {
            "name": "gatsby-plugin-google-analytics",
            "version": "^2.0.8"
          },
          {
            "name": "gatsby-plugin-manifest",
            "version": "^2.0.9"
          },
          {
            "name": "gatsby-plugin-offline",
            "version": "^2.0.16"
          },
          {
            "name": "gatsby-plugin-react-helmet",
            "version": "^3.0.2"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^2.0.22"
          },
          {
            "name": "gatsby-plugin-styled-components",
            "version": "^3.0.4"
          },
          {
            "name": "gatsby-source-contentful",
            "version": "^2.0.16"
          },
          {
            "name": "gatsby-source-filesystem",
            "version": "^2.0.23"
          },
          {
            "name": "gatsby-transformer-remark",
            "version": "^2.1.15"
          },
          {
            "name": "gatsby-transformer-sharp",
            "version": "^2.1.8"
          },
          {
            "name": "react",
            "version": "^16.6.3"
          },
          {
            "name": "react-dom",
            "version": "^16.6.3"
          },
          {
            "name": "react-emotion",
            "version": "^10.0.0"
          },
          {
            "name": "react-helmet",
            "version": "^5.2.0"
          },
          {
            "name": "react-spring",
            "version": "^6.1.10"
          },
          {
            "name": "styled-components",
            "version": "^4.1.2"
          }
        ],
        "devDependencies": [
          {
            "name": "prettier",
            "version": "^1.15.2"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "6461a492469d94e80b7e44457194fdd3",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "88db0ef3-6758-5082-a550-dec327bc044f": {
      "resolve": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-page-creator",
      "id": "88db0ef3-6758-5082-a550-dec327bc044f",
      "name": "gatsby-plugin-page-creator",
      "version": "2.0.8",
      "pluginOptions": {
        "plugins": [],
        "path": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages",
        "pathCheck": false
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/node_modules/gatsby-plugin-page-creator",
      "packageJson": {
        "name": "gatsby-plugin-page-creator",
        "description": "Gatsby plugin that automatically creates pages from React components in specified directories",
        "version": "2.0.8",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^2.1.2"
          },
          {
            "name": "fs-exists-cached",
            "version": "^1.0.0"
          },
          {
            "name": "glob",
            "version": "^7.1.1"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "micromatch",
            "version": "^3.1.10"
          },
          {
            "name": "parse-filepath",
            "version": "^1.0.1"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "4ed18fd9aefc5cfa81e55a074b5bc01c",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Site": {
      "siteMetadata": {
        "title": "<tomWritesCode />",
        "description": "Hi, my names Thomas and I write code, and drink lots of coffee.",
        "url": "https://tomwritesco.de",
        "image": "/public/static/screen.png",
        "twitterUsername": "@tomwritescode"
      },
      "port": "8000",
      "host": "localhost",
      "pathPrefix": "",
      "polyfill": true,
      "buildTime": "2019-05-14T08:32:59.082Z",
      "id": "Site",
      "parent": null,
      "children": [],
      "internal": {
        "contentDigest": "22f30f2c6413b3947876c869be34655f",
        "type": "Site",
        "owner": "internal-data-bridge"
      }
    },
    "cb2f9979-c642-54ea-a582-4a2fce446bf8": {
      "id": "cb2f9979-c642-54ea-a582-4a2fce446bf8",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "e19e354474032cb3b63d6686bd6a32f9",
        "type": "Directory",
        "description": "Directory \"src/images\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "relativePath": "",
      "extension": "",
      "size": 288,
      "prettySize": "288 B",
      "modifiedTime": "2019-02-19T06:17:25.780Z",
      "accessTime": "2019-05-14T08:33:04.701Z",
      "changeTime": "2019-02-19T06:17:25.780Z",
      "birthTime": "2018-12-02T23:01:55.425Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src",
      "base": "images",
      "ext": "",
      "name": "images",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 9,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616218752,
      "blocks": 0,
      "atimeMs": 1557822784701.2578,
      "mtimeMs": 1550557045780.1716,
      "ctimeMs": 1550557045780.1716,
      "birthtimeMs": 1543791715425.4329,
      "atime": "2019-05-14T08:33:04.701Z",
      "mtime": "2019-02-19T06:17:25.780Z",
      "ctime": "2019-02-19T06:17:25.780Z",
      "birthtime": "2018-12-02T23:01:55.425Z"
    },
    "c915c24d-211d-5ade-bb63-617d6c65924e": {
      "id": "c915c24d-211d-5ade-bb63-617d6c65924e",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "a70d6274fefd6cbba1dd9aec3737dd4e",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/linkedin.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images/linkedin.png",
      "relativePath": "linkedin.png",
      "extension": "png",
      "size": 11819,
      "prettySize": "11.8 kB",
      "modifiedTime": "2018-11-29T21:21:56.308Z",
      "accessTime": "2019-03-05T12:13:55.914Z",
      "changeTime": "2018-12-19T22:21:20.031Z",
      "birthTime": "2018-11-29T21:21:56.267Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "base": "linkedin.png",
      "ext": ".png",
      "name": "linkedin",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616839800,
      "blocks": 24,
      "atimeMs": 1551788035913.7332,
      "mtimeMs": 1543526516308.0266,
      "ctimeMs": 1545258080031.4614,
      "birthtimeMs": 1543526516267.3442,
      "atime": "2019-03-05T12:13:55.914Z",
      "mtime": "2018-11-29T21:21:56.308Z",
      "ctime": "2018-12-19T22:21:20.031Z",
      "birthtime": "2018-11-29T21:21:56.267Z"
    },
    "99e2c9f9-1ee0-5a47-9245-c6dad65c3680": {
      "id": "99e2c9f9-1ee0-5a47-9245-c6dad65c3680",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "09ae989c1160fc17fe6518006563b3e8",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/twitter.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images/twitter.png",
      "relativePath": "twitter.png",
      "extension": "png",
      "size": 6182,
      "prettySize": "6.18 kB",
      "modifiedTime": "2018-11-29T21:21:56.275Z",
      "accessTime": "2019-03-05T12:13:55.914Z",
      "changeTime": "2018-12-19T22:21:20.032Z",
      "birthTime": "2018-11-29T21:21:56.267Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "base": "twitter.png",
      "ext": ".png",
      "name": "twitter",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616839801,
      "blocks": 16,
      "atimeMs": 1551788035913.742,
      "mtimeMs": 1543526516275.148,
      "ctimeMs": 1545258080032.4536,
      "birthtimeMs": 1543526516267.4275,
      "atime": "2019-03-05T12:13:55.914Z",
      "mtime": "2018-11-29T21:21:56.275Z",
      "ctime": "2018-12-19T22:21:20.032Z",
      "birthtime": "2018-11-29T21:21:56.267Z"
    },
    "b2163dc5-37e7-5ece-b153-0fc7274aa3b7": {
      "id": "b2163dc5-37e7-5ece-b153-0fc7274aa3b7",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "84ee0ad13b95bfa655019a268de33cb0",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/github.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images/github.png",
      "relativePath": "github.png",
      "extension": "png",
      "size": 23978,
      "prettySize": "24 kB",
      "modifiedTime": "2018-11-29T21:21:56.308Z",
      "accessTime": "2019-03-05T12:13:55.914Z",
      "changeTime": "2018-12-19T22:21:20.031Z",
      "birthTime": "2018-11-29T21:21:56.267Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "base": "github.png",
      "ext": ".png",
      "name": "github",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616839799,
      "blocks": 48,
      "atimeMs": 1551788035913.724,
      "mtimeMs": 1543526516307.99,
      "ctimeMs": 1545258080030.6655,
      "birthtimeMs": 1543526516267.245,
      "atime": "2019-03-05T12:13:55.914Z",
      "mtime": "2018-11-29T21:21:56.308Z",
      "ctime": "2018-12-19T22:21:20.031Z",
      "birthtime": "2018-11-29T21:21:56.267Z"
    },
    "e524ba57-a5c8-5f27-b30b-74b2d23b6bf3": {
      "id": "e524ba57-a5c8-5f27-b30b-74b2d23b6bf3",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "47b6a829989b7ffc84743d8837473e05",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/imgTest.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images/imgTest.png",
      "relativePath": "imgTest.png",
      "extension": "png",
      "size": 143002,
      "prettySize": "143 kB",
      "modifiedTime": "2018-12-09T08:34:44.118Z",
      "accessTime": "2019-03-05T12:13:47.099Z",
      "changeTime": "2018-12-10T09:54:22.409Z",
      "birthTime": "2018-12-09T08:34:44.118Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "base": "imgTest.png",
      "ext": ".png",
      "name": "imgTest",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616612952,
      "blocks": 280,
      "atimeMs": 1551788027099.4504,
      "mtimeMs": 1544344484117.8904,
      "ctimeMs": 1544435662409.043,
      "birthtimeMs": 1544344484117.6846,
      "atime": "2019-03-05T12:13:47.099Z",
      "mtime": "2018-12-09T08:34:44.118Z",
      "ctime": "2018-12-10T09:54:22.409Z",
      "birthtime": "2018-12-09T08:34:44.118Z"
    },
    "b33a74e2-eee5-56f1-aef1-11cd4521948d": {
      "id": "b33a74e2-eee5-56f1-aef1-11cd4521948d",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "5c88efbb0064a7a305d46e25d3cfcdee",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/screenShot.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images/screenShot.png",
      "relativePath": "screenShot.png",
      "extension": "png",
      "size": 437910,
      "prettySize": "438 kB",
      "modifiedTime": "2019-02-19T06:17:25.781Z",
      "accessTime": "2019-03-05T12:13:47.100Z",
      "changeTime": "2019-02-19T06:17:25.782Z",
      "birthTime": "2019-02-19T04:20:57.443Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "base": "screenShot.png",
      "ext": ".png",
      "name": "screenShot",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8619757407,
      "blocks": 856,
      "atimeMs": 1551788027099.5046,
      "mtimeMs": 1550557045781,
      "ctimeMs": 1550557045782.4858,
      "birthtimeMs": 1550550057442.6348,
      "atime": "2019-03-05T12:13:47.100Z",
      "mtime": "2019-02-19T06:17:25.781Z",
      "ctime": "2019-02-19T06:17:25.782Z",
      "birthtime": "2019-02-19T04:20:57.443Z"
    },
    "47d50a64-6cae-5644-bd64-fdbbff789304": {
      "id": "47d50a64-6cae-5644-bd64-fdbbff789304",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "4b81d8dd28971e397ecb6029290fbacd",
        "type": "File",
        "mediaType": "image/jpeg",
        "description": "File \"src/images/fullLogo.jpg\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images/fullLogo.jpg",
      "relativePath": "fullLogo.jpg",
      "extension": "jpg",
      "size": 202686,
      "prettySize": "203 kB",
      "modifiedTime": "2019-02-18T23:18:56.761Z",
      "accessTime": "2019-03-05T12:13:47.099Z",
      "changeTime": "2019-02-19T05:54:56.856Z",
      "birthTime": "2019-02-18T23:18:56.713Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/images",
      "base": "fullLogo.jpg",
      "ext": ".jpg",
      "name": "fullLogo",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8619757377,
      "blocks": 400,
      "atimeMs": 1551788027099.3894,
      "mtimeMs": 1550531936760.9553,
      "ctimeMs": 1550555696855.8037,
      "birthtimeMs": 1550531936713.2578,
      "atime": "2019-03-05T12:13:47.099Z",
      "mtime": "2019-02-18T23:18:56.761Z",
      "ctime": "2019-02-19T05:54:56.856Z",
      "birthtime": "2019-02-18T23:18:56.713Z"
    },
    "9026e89b-a3cf-548d-a5e2-fa459d0d62c6": {
      "id": "9026e89b-a3cf-548d-a5e2-fa459d0d62c6",
      "children": [],
      "parent": null,
      "internal": {
        "contentDigest": "e011bf527ddb806b09a63e35b3a4b4dd",
        "type": "Directory",
        "description": "Directory \"src/siteDocs\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "siteDocs",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/siteDocs",
      "relativePath": "",
      "extension": "",
      "size": 128,
      "prettySize": "128 B",
      "modifiedTime": "2018-12-04T05:14:55.386Z",
      "accessTime": "2019-05-14T08:33:04.734Z",
      "changeTime": "2018-12-04T05:14:55.386Z",
      "birthTime": "2018-12-02T23:51:39.707Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src",
      "base": "siteDocs",
      "ext": "",
      "name": "siteDocs",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 4,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616222701,
      "blocks": 0,
      "atimeMs": 1557822784734.0325,
      "mtimeMs": 1543900495385.9094,
      "ctimeMs": 1543900495385.9094,
      "birthtimeMs": 1543794699707.1155,
      "atime": "2019-05-14T08:33:04.734Z",
      "mtime": "2018-12-04T05:14:55.386Z",
      "ctime": "2018-12-04T05:14:55.386Z",
      "birthtime": "2018-12-02T23:51:39.707Z"
    },
    "c4305f09-f67a-536f-a5a5-16469d868e36": {
      "id": "c4305f09-f67a-536f-a5a5-16469d868e36",
      "children": [
        "5fb604b8-aab9-54db-adf9-8d309c8f2786"
      ],
      "parent": null,
      "internal": {
        "contentDigest": "bdb60a7eb6f62a34caf4c3e5b7015f19",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/siteDocs/Docs.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "siteDocs",
      "absolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/siteDocs/Docs.md",
      "relativePath": "Docs.md",
      "extension": "md",
      "size": 5254,
      "prettySize": "5.25 kB",
      "modifiedTime": "2019-04-17T22:58:49.534Z",
      "accessTime": "2019-04-17T23:00:08.018Z",
      "changeTime": "2019-04-17T22:58:49.534Z",
      "birthTime": "2018-12-02T23:52:44.369Z",
      "root": "/",
      "dir": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/siteDocs",
      "base": "Docs.md",
      "ext": ".md",
      "name": "Docs",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 8616222734,
      "blocks": 16,
      "atimeMs": 1555542008018.137,
      "mtimeMs": 1555541929534.441,
      "ctimeMs": 1555541929534.441,
      "birthtimeMs": 1543794764369.3396,
      "atime": "2019-04-17T23:00:08.018Z",
      "mtime": "2019-04-17T22:58:49.534Z",
      "ctime": "2019-04-17T22:58:49.534Z",
      "birthtime": "2018-12-02T23:52:44.369Z"
    },
    "3e9bd746-91be-5838-b91c-b28f06440676": {
      "id": "3e9bd746-91be-5838-b91c-b28f06440676",
      "parent": null,
      "children": [],
      "name": "tomWritesCode Blog",
      "displayField": "title",
      "description": "Blog posts from <tomWritesCode />",
      "internal": {
        "type": "ContentfulContentType",
        "contentDigest": "9b0dd8ea9aceb962e246f04ce9f49fe8",
        "owner": "gatsby-source-contentful"
      }
    },
    "0cfaa59b-0be1-527e-a207-614b6904683f": {
      "title": "Hosting a Gatsby Site on Zeit Now",
      "slug": "hosting-a-gatsby-site-on-zeit-now",
      "date": "2019-03-05",
      "intro": "I recently launched my website, and with that comes hosting. I was originally going to go with Netlify for my hosting but ended up with Zeit's Now service. ",
      "post___NODE": "de2f9dd4-848f-5cc2-908d-3517fbc52c38",
      "id": "0cfaa59b-0be1-527e-a207-614b6904683f",
      "contentful_id": "4lOF7VVbQYkViVmTSJpSmf",
      "createdAt": "2019-03-05T11:35:39.511Z",
      "updatedAt": "2019-03-05T12:17:17.774Z",
      "parent": "tomWritesCode Blog",
      "children": [
        "de2f9dd4-848f-5cc2-908d-3517fbc52c38"
      ],
      "internal": {
        "type": "ContentfulTomWritesCodeBlog",
        "contentDigest": "a8aa23c12c4d35e99bf98fafe2c66d9f",
        "owner": "gatsby-source-contentful"
      },
      "node_locale": "en-AU"
    },
    "2010fc40-2bad-59fd-a4f9-4072fa2bf6b9": {
      "title": "raspberryCandy - I made a VS Code theme",
      "slug": "raspberrycandy-i-made-a-vs-code-theme",
      "date": "2019-02-19",
      "intro": "raspberryCandy has been a project running in the background for about 2 months now. As of now. It's finished and published.",
      "post___NODE": "18edb6d1-c54b-5e6e-99b1-baeeac871941",
      "id": "2010fc40-2bad-59fd-a4f9-4072fa2bf6b9",
      "contentful_id": "6QUIByBlQrrbsfS3HL8qER",
      "createdAt": "2019-02-19T11:32:34.400Z",
      "updatedAt": "2019-05-05T05:11:42.430Z",
      "parent": "tomWritesCode Blog",
      "children": [
        "18edb6d1-c54b-5e6e-99b1-baeeac871941"
      ],
      "internal": {
        "type": "ContentfulTomWritesCodeBlog",
        "contentDigest": "0bde03b30a01d5a298f8f80f2f946c7d",
        "owner": "gatsby-source-contentful"
      },
      "node_locale": "en-AU"
    },
    "07b0e325-f7fd-5f3a-802a-c6b850300010": {
      "title": "tomWritesCode wasn't built in a day.",
      "slug": "wasnt-build-in-a-day",
      "date": "2018-12-06",
      "intro": "Well, if you're reading this that can only mean one thing. I finally built the damn site. ",
      "post___NODE": "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7",
      "id": "07b0e325-f7fd-5f3a-802a-c6b850300010",
      "contentful_id": "6k3aHYwVUcY4Gk8moGAqSK",
      "createdAt": "2018-12-06T11:14:18.380Z",
      "updatedAt": "2019-01-22T12:35:33.560Z",
      "parent": "tomWritesCode Blog",
      "children": [
        "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7"
      ],
      "internal": {
        "type": "ContentfulTomWritesCodeBlog",
        "contentDigest": "083afc10be2228009239d1421194c0ea",
        "owner": "gatsby-source-contentful"
      },
      "node_locale": "en-AU"
    },
    "de2f9dd4-848f-5cc2-908d-3517fbc52c38": {
      "id": "de2f9dd4-848f-5cc2-908d-3517fbc52c38",
      "parent": "0cfaa59b-0be1-527e-a207-614b6904683f",
      "children": [
        "ae294ce9-ce65-57b7-89bb-415a4b6c6cb5"
      ],
      "post": "I bought my domain tomwritesco.de from Zeit's new domain service. The thing I didn't look into when purchasing was if I could chage the name server which would allow me to host my site on Netlify and take advantge of their auto rebuild and web-hooks that would trigger a rebuild when I updated Contentful. \n\nHosting the site on Zeit's Now was really easy, I only had to do a little bit of research in what was needed to get a Gatsby project going. The main part was putting a __now.json__ file into the root of the project. \n\nInside of the __now.json__ file just needs to have the following. \n\n    {\n      \"version\": 2,\n      \"name\": \"Your Project Name\",\n      \"build\": [\n        { \n          \"src\": \"package.json\",\n          \"use\": \"@now/static-build\",\n          \"config\": {\"distDir\": \"public\"} \n        }\n      ]\n    }\n\nThis file just lets Now know what to do with the files it is receiving. \"version\" is setting what verion of Now will be used (In this case version 2). \"name\" is what name will show up in your Zeit Dashboard. \"build\" is the main command that will set off the build of the Gatsby site and directs Now to the public folder which is build when Gatsby generates the static pages. ",
      "internal": {
        "type": "contentfulTomWritesCodeBlogPostTextNode",
        "mediaType": "text/markdown",
        "content": "I bought my domain tomwritesco.de from Zeit's new domain service. The thing I didn't look into when purchasing was if I could chage the name server which would allow me to host my site on Netlify and take advantge of their auto rebuild and web-hooks that would trigger a rebuild when I updated Contentful. \n\nHosting the site on Zeit's Now was really easy, I only had to do a little bit of research in what was needed to get a Gatsby project going. The main part was putting a __now.json__ file into the root of the project. \n\nInside of the __now.json__ file just needs to have the following. \n\n    {\n      \"version\": 2,\n      \"name\": \"Your Project Name\",\n      \"build\": [\n        { \n          \"src\": \"package.json\",\n          \"use\": \"@now/static-build\",\n          \"config\": {\"distDir\": \"public\"} \n        }\n      ]\n    }\n\nThis file just lets Now know what to do with the files it is receiving. \"version\" is setting what verion of Now will be used (In this case version 2). \"name\" is what name will show up in your Zeit Dashboard. \"build\" is the main command that will set off the build of the Gatsby site and directs Now to the public folder which is build when Gatsby generates the static pages. ",
        "contentDigest": "ca2f32e14cfcd95593ac12729014dcc8",
        "owner": "gatsby-source-contentful"
      }
    },
    "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7": {
      "id": "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7",
      "parent": "07b0e325-f7fd-5f3a-802a-c6b850300010",
      "children": [
        "5bb13972-4f48-5983-9c05-a264bf656036"
      ],
      "post": "This is a personal website for me has always been the thing I have needed to build the most but prioritised the least. This should cover the website that took forever to build. \n\n\nSo, tomWritesCode, a site to house my blog, and just some basic stuff about me. It only took what felt like 300 years to make, a series of pushbacks due to other things I wanted to make and the constant learning of new things which makes more revisions etc, etc, (I'm sure that if you have ever made your own site you will know the feeling.)\n\n\nI went with a neon theme after playing around with a flicker animation for an idea, now it's the base of my whole site. the flicker annimation is using keyframes and there is another class for a delay to use the same animation on the same page.\n",
      "internal": {
        "type": "contentfulTomWritesCodeBlogPostTextNode",
        "mediaType": "text/markdown",
        "content": "This is a personal website for me has always been the thing I have needed to build the most but prioritised the least. This should cover the website that took forever to build. \n\n\nSo, tomWritesCode, a site to house my blog, and just some basic stuff about me. It only took what felt like 300 years to make, a series of pushbacks due to other things I wanted to make and the constant learning of new things which makes more revisions etc, etc, (I'm sure that if you have ever made your own site you will know the feeling.)\n\n\nI went with a neon theme after playing around with a flicker animation for an idea, now it's the base of my whole site. the flicker annimation is using keyframes and there is another class for a delay to use the same animation on the same page.\n",
        "contentDigest": "24662855ad36047a21baadaf45e46726",
        "owner": "gatsby-source-contentful"
      }
    },
    "a6a5b149-ba33-5321-baf8-b30341b83eed": {
      "contentful_id": "3YAWA3s77Cv1ZBXSwv6r0U",
      "id": "a6a5b149-ba33-5321-baf8-b30341b83eed",
      "parent": null,
      "children": [],
      "file": {
        "url": "//images.ctfassets.net/u434ytvnd3bo/3YAWA3s77Cv1ZBXSwv6r0U/6cf699d9415f103988a32330b89e6a49/fullLogo.jpg",
        "details": {
          "size": 202686,
          "image": {
            "width": 1067,
            "height": 1067
          }
        },
        "fileName": "fullLogo.jpg",
        "contentType": "image/jpeg"
      },
      "title": "fullLogo",
      "description": "",
      "node_locale": "en-AU",
      "internal": {
        "type": "ContentfulAsset",
        "contentDigest": "e18d47cda1fce2c35a49962cac660dc9",
        "owner": "gatsby-source-contentful"
      }
    },
    "51b99259-7844-59e1-9080-2a4d442bcb6f": {
      "contentful_id": "2RH3azl2Z6YFdiXblptspp",
      "id": "51b99259-7844-59e1-9080-2a4d442bcb6f",
      "parent": null,
      "children": [],
      "file": {
        "url": "//images.ctfassets.net/u434ytvnd3bo/2RH3azl2Z6YFdiXblptspp/ca7ef56f44963f787b4b8775353363a0/screenShot.png",
        "details": {
          "size": 437910,
          "image": {
            "width": 2846,
            "height": 1650
          }
        },
        "fileName": "screenShot.png",
        "contentType": "image/png"
      },
      "title": "screenShot",
      "description": "",
      "node_locale": "en-AU",
      "internal": {
        "type": "ContentfulAsset",
        "contentDigest": "42c2d890b6ca5763c69b7a9c0d760f64",
        "owner": "gatsby-source-contentful"
      }
    },
    "ae294ce9-ce65-57b7-89bb-415a4b6c6cb5": {
      "id": "ae294ce9-ce65-57b7-89bb-415a4b6c6cb5",
      "children": [],
      "parent": "de2f9dd4-848f-5cc2-908d-3517fbc52c38",
      "internal": {
        "content": "I bought my domain tomwritesco.de from Zeit's new domain service. The thing I didn't look into when purchasing was if I could chage the name server which would allow me to host my site on Netlify and take advantge of their auto rebuild and web-hooks that would trigger a rebuild when I updated Contentful. \n\nHosting the site on Zeit's Now was really easy, I only had to do a little bit of research in what was needed to get a Gatsby project going. The main part was putting a __now.json__ file into the root of the project. \n\nInside of the __now.json__ file just needs to have the following. \n\n    {\n      \"version\": 2,\n      \"name\": \"Your Project Name\",\n      \"build\": [\n        { \n          \"src\": \"package.json\",\n          \"use\": \"@now/static-build\",\n          \"config\": {\"distDir\": \"public\"} \n        }\n      ]\n    }\n\nThis file just lets Now know what to do with the files it is receiving. \"version\" is setting what verion of Now will be used (In this case version 2). \"name\" is what name will show up in your Zeit Dashboard. \"build\" is the main command that will set off the build of the Gatsby site and directs Now to the public folder which is build when Gatsby generates the static pages. ",
        "type": "MarkdownRemark",
        "contentDigest": "5a4cb3744d2f51c0f6c8fe6d7fd305ec",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "",
        "_PARENT": "de2f9dd4-848f-5cc2-908d-3517fbc52c38"
      },
      "excerpt": "",
      "rawMarkdownBody": "I bought my domain tomwritesco.de from Zeit's new domain service. The thing I didn't look into when purchasing was if I could chage the name server which would allow me to host my site on Netlify and take advantge of their auto rebuild and web-hooks that would trigger a rebuild when I updated Contentful. \n\nHosting the site on Zeit's Now was really easy, I only had to do a little bit of research in what was needed to get a Gatsby project going. The main part was putting a __now.json__ file into the root of the project. \n\nInside of the __now.json__ file just needs to have the following. \n\n    {\n      \"version\": 2,\n      \"name\": \"Your Project Name\",\n      \"build\": [\n        { \n          \"src\": \"package.json\",\n          \"use\": \"@now/static-build\",\n          \"config\": {\"distDir\": \"public\"} \n        }\n      ]\n    }\n\nThis file just lets Now know what to do with the files it is receiving. \"version\" is setting what verion of Now will be used (In this case version 2). \"name\" is what name will show up in your Zeit Dashboard. \"build\" is the main command that will set off the build of the Gatsby site and directs Now to the public folder which is build when Gatsby generates the static pages. "
    },
    "5bb13972-4f48-5983-9c05-a264bf656036": {
      "id": "5bb13972-4f48-5983-9c05-a264bf656036",
      "children": [],
      "parent": "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7",
      "internal": {
        "content": "This is a personal website for me has always been the thing I have needed to build the most but prioritised the least. This should cover the website that took forever to build. \n\n\nSo, tomWritesCode, a site to house my blog, and just some basic stuff about me. It only took what felt like 300 years to make, a series of pushbacks due to other things I wanted to make and the constant learning of new things which makes more revisions etc, etc, (I'm sure that if you have ever made your own site you will know the feeling.)\n\n\nI went with a neon theme after playing around with a flicker animation for an idea, now it's the base of my whole site. the flicker annimation is using keyframes and there is another class for a delay to use the same animation on the same page.\n",
        "type": "MarkdownRemark",
        "contentDigest": "c1fff8cf24c1ebfc3c39ecebfdff9c12",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "",
        "_PARENT": "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7"
      },
      "excerpt": "",
      "rawMarkdownBody": "This is a personal website for me has always been the thing I have needed to build the most but prioritised the least. This should cover the website that took forever to build. \n\n\nSo, tomWritesCode, a site to house my blog, and just some basic stuff about me. It only took what felt like 300 years to make, a series of pushbacks due to other things I wanted to make and the constant learning of new things which makes more revisions etc, etc, (I'm sure that if you have ever made your own site you will know the feeling.)\n\n\nI went with a neon theme after playing around with a flicker animation for an idea, now it's the base of my whole site. the flicker annimation is using keyframes and there is another class for a delay to use the same animation on the same page.\n"
    },
    "5fb604b8-aab9-54db-adf9-8d309c8f2786": {
      "id": "5fb604b8-aab9-54db-adf9-8d309c8f2786",
      "children": [],
      "parent": "c4305f09-f67a-536f-a5a5-16469d868e36",
      "internal": {
        "content": "\n## Hi my name is Tom, this is my site, and this is the how/what I used to build it.\n\nAll of the code for this site as well as most of the projects I talk about in here will be available at my [GitHub - tomWritesCode](https://github.com/tomWritesCode), feel free to check them out and let me know what you think.\n\n*******\n\n## raspberryCandy - <a href=\"https://marketplace.visualstudio.com/items?itemName=tomWritesCode.raspberryCandy\" target=\"_blank\">VS Code Marketplace</a>\n\nThis theme was inspired by my love of dark coding themes, Sarah Drasner's Night Owl theme, Wes Bos' Cobalt2 theme and Scott Tolinski's LevelUp Official Theme.\n\nThe name of this comes from ONA Cafe in Marrickville in Sydney, Australia. My favorite roast they have is called Raspberry Candy and I have had way too many of those while at that cafe.\n\n![raspberryCandy Theme](https://res.cloudinary.com/tomwritescode/image/upload/v1550563515/Screenshot2.png)\n\n*******\n\n## raspberryCandy NodeJS Web Scraper\n\nAfter making the raspberryCandy VS Code theme, I had and still have the huge novelty of checking daily to see how many downloads it has.\n\nAs a little side project I wanted to learn how to make a Node CLI tool and decided to roll that want with a way to check the downloads of my theme. \n\nI found a tutorial that went through making a web scraper and adapted it to use the VS Code Marketplace page of raspberryCandy, find the styling tag of the number of downloads and then pull the text from it. \n\nThen using Chalk, Figlet, Request Promise and Cheerio I would return the result to the terminal as well as a small math calculation which worked out how many days the theme has been released. I then added the command 'raspberry' to the project so that the command can be run straight from my terminal from any directory. \n\nA small project that only really has relevance for me but gave me a great understanding of working in a small NodeJS environment and making a CLI tool. \n\n![raspberryCandy Web Scraper](https://res.cloudinary.com/tomwritescode/image/upload/v1555478402/Screen_Shot_2019-04-17_at_8.43.53_am.png)\n\n*******\n\n## Basketball NoStarz - <a href=\"https://no-starz.tomwritescode.now.sh/\" target=\"_blank\">Check out the project</a>\n\n I have been playing basketball with my brother on my my days off and wanted a way to track our scores, that night this project started.\n\n The original concept was a quick Gatsby knock up to make sure it worked. Once I worked out the base way of how I wanted to do it I decided to use NextJS, Emotion, Zeit's Now hosting platform to build it.\n\n The main part of the project uses a lot of state and I plan to start learning and using Redux now that I have the concept of the project running and usable, among this there is also a large list of things I would like to work on and add to the project.\n\n For me this is a really awesome project that constantly has room to grow and add new ideas and features really giving me a great platform to have as a constantly growing app.\n\n![Basketball NoStarz](https://res.cloudinary.com/tomwritescode/image/upload/v1555541786/nostarz.gif)\n\n*******\n\n## dadJokes() - <a href=\"https://jokesfromyourdad.netlify.com\" target=\"_blank\">Check out the project</a>\n\nThis doesn't need to exist, but here it is anyway. There was a running joke at the Code Heart Design Conference that we needed dad jokes in between the silence of people switching laptops. This was made the very next day.\n\nBuilt in Gatsby because that is what I always reach for when I want to make something quickly.\n\nThe main logic behind it working is the array of objects in JokeList.js:\n\n```javascript\n\nconst JokeList = [\n\n{\n\njoke: `Did you hear about the restaurant on the moon?`,\n\npunchLine: `Great food, no atmosphere.`,\n\n},\n\n]\n\n```\n\nThis is then used by the JokeGenerator.js file when someone presses the 'Just one more.' button which triggers the NewJoke() function:\n\n```javascript\n\nfunction NewJoke() {\n\n*// jokeGenerator();*\n\nconst returnedJoke = jokeGenerator()\n\n*// Will not generate joke twice in a row*\n\ndocument.getElementById('Joke').innerHTML = returnedJoke.joke\n\ndocument.getElementById('Punchline').innerHTML = returnedJoke.punchLine\n\n}\n\n```\n\nThe JokeGenerator function runs first which generates a random Integer based on how long the array of jokes is.\n\n```javascript\n\nfunction getRandomInt(max) {\n\nreturn Math.floor(Math.random() * Math.floor(max))\n\n}\n\nfunction jokeGenerator() {\n\nreturn JokeList[getRandomInt(JokeList.length)]\n\n}\n\n```\n\n*******\n\n## tomWritesCode - <a href=\"https://github.com/tomWritesCode/tomWritesCode\" target=\"_blank\">Check out the codebase</a>\n\nThis site is built in Gatsby, but as well as React and GraphQL being packaged with Gatsby I am also using Styled Components as well as Emotion because I wanted to see how it worked. Last but not least, Contentful for holding all my blog posts.\n\n```javascript\n\ntomWritesCode = () => {\n\nconst React = true;\n\nconst GatsbyJS = true;\n\nconst Blog = 'Contentful';\n\nconst Docs = 'Markdown Remark';\n\nconst styling = 'Styled Components';\n\nconst stylingAlso = 'Emotion';\n\n}\n\n```\n\n*******\n\nOnce that has been done the selected joke is then set into the joke and punchline sections of the page.",
        "type": "MarkdownRemark",
        "contentDigest": "b98df1a2d8495d36c028a7c5358a3939",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "tomWritesCode - How I build the things.",
        "slug": "/docs",
        "_PARENT": "c4305f09-f67a-536f-a5a5-16469d868e36"
      },
      "excerpt": "",
      "rawMarkdownBody": "\n## Hi my name is Tom, this is my site, and this is the how/what I used to build it.\n\nAll of the code for this site as well as most of the projects I talk about in here will be available at my [GitHub - tomWritesCode](https://github.com/tomWritesCode), feel free to check them out and let me know what you think.\n\n*******\n\n## raspberryCandy - <a href=\"https://marketplace.visualstudio.com/items?itemName=tomWritesCode.raspberryCandy\" target=\"_blank\">VS Code Marketplace</a>\n\nThis theme was inspired by my love of dark coding themes, Sarah Drasner's Night Owl theme, Wes Bos' Cobalt2 theme and Scott Tolinski's LevelUp Official Theme.\n\nThe name of this comes from ONA Cafe in Marrickville in Sydney, Australia. My favorite roast they have is called Raspberry Candy and I have had way too many of those while at that cafe.\n\n![raspberryCandy Theme](https://res.cloudinary.com/tomwritescode/image/upload/v1550563515/Screenshot2.png)\n\n*******\n\n## raspberryCandy NodeJS Web Scraper\n\nAfter making the raspberryCandy VS Code theme, I had and still have the huge novelty of checking daily to see how many downloads it has.\n\nAs a little side project I wanted to learn how to make a Node CLI tool and decided to roll that want with a way to check the downloads of my theme. \n\nI found a tutorial that went through making a web scraper and adapted it to use the VS Code Marketplace page of raspberryCandy, find the styling tag of the number of downloads and then pull the text from it. \n\nThen using Chalk, Figlet, Request Promise and Cheerio I would return the result to the terminal as well as a small math calculation which worked out how many days the theme has been released. I then added the command 'raspberry' to the project so that the command can be run straight from my terminal from any directory. \n\nA small project that only really has relevance for me but gave me a great understanding of working in a small NodeJS environment and making a CLI tool. \n\n![raspberryCandy Web Scraper](https://res.cloudinary.com/tomwritescode/image/upload/v1555478402/Screen_Shot_2019-04-17_at_8.43.53_am.png)\n\n*******\n\n## Basketball NoStarz - <a href=\"https://no-starz.tomwritescode.now.sh/\" target=\"_blank\">Check out the project</a>\n\n I have been playing basketball with my brother on my my days off and wanted a way to track our scores, that night this project started.\n\n The original concept was a quick Gatsby knock up to make sure it worked. Once I worked out the base way of how I wanted to do it I decided to use NextJS, Emotion, Zeit's Now hosting platform to build it.\n\n The main part of the project uses a lot of state and I plan to start learning and using Redux now that I have the concept of the project running and usable, among this there is also a large list of things I would like to work on and add to the project.\n\n For me this is a really awesome project that constantly has room to grow and add new ideas and features really giving me a great platform to have as a constantly growing app.\n\n![Basketball NoStarz](https://res.cloudinary.com/tomwritescode/image/upload/v1555541786/nostarz.gif)\n\n*******\n\n## dadJokes() - <a href=\"https://jokesfromyourdad.netlify.com\" target=\"_blank\">Check out the project</a>\n\nThis doesn't need to exist, but here it is anyway. There was a running joke at the Code Heart Design Conference that we needed dad jokes in between the silence of people switching laptops. This was made the very next day.\n\nBuilt in Gatsby because that is what I always reach for when I want to make something quickly.\n\nThe main logic behind it working is the array of objects in JokeList.js:\n\n```javascript\n\nconst JokeList = [\n\n{\n\njoke: `Did you hear about the restaurant on the moon?`,\n\npunchLine: `Great food, no atmosphere.`,\n\n},\n\n]\n\n```\n\nThis is then used by the JokeGenerator.js file when someone presses the 'Just one more.' button which triggers the NewJoke() function:\n\n```javascript\n\nfunction NewJoke() {\n\n*// jokeGenerator();*\n\nconst returnedJoke = jokeGenerator()\n\n*// Will not generate joke twice in a row*\n\ndocument.getElementById('Joke').innerHTML = returnedJoke.joke\n\ndocument.getElementById('Punchline').innerHTML = returnedJoke.punchLine\n\n}\n\n```\n\nThe JokeGenerator function runs first which generates a random Integer based on how long the array of jokes is.\n\n```javascript\n\nfunction getRandomInt(max) {\n\nreturn Math.floor(Math.random() * Math.floor(max))\n\n}\n\nfunction jokeGenerator() {\n\nreturn JokeList[getRandomInt(JokeList.length)]\n\n}\n\n```\n\n*******\n\n## tomWritesCode - <a href=\"https://github.com/tomWritesCode/tomWritesCode\" target=\"_blank\">Check out the codebase</a>\n\nThis site is built in Gatsby, but as well as React and GraphQL being packaged with Gatsby I am also using Styled Components as well as Emotion because I wanted to see how it worked. Last but not least, Contentful for holding all my blog posts.\n\n```javascript\n\ntomWritesCode = () => {\n\nconst React = true;\n\nconst GatsbyJS = true;\n\nconst Blog = 'Contentful';\n\nconst Docs = 'Markdown Remark';\n\nconst styling = 'Styled Components';\n\nconst stylingAlso = 'Emotion';\n\n}\n\n```\n\n*******\n\nOnce that has been done the selected joke is then set into the joke and punchline sections of the page.",
      "fileAbsolutePath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/siteDocs/Docs.md"
    },
    "b99538a6-a41c-57a5-8921-12d2323eec7d": {
      "contentful_id": "Z4MX0t1AvEly5T63iacIE",
      "id": "b99538a6-a41c-57a5-8921-12d2323eec7d",
      "parent": null,
      "children": [],
      "file": {
        "url": "//videos.ctfassets.net/u434ytvnd3bo/Z4MX0t1AvEly5T63iacIE/3bfc5155d036b199b28a6da5e7622286/Recording-encoded.mp4",
        "details": {
          "size": 2397997
        },
        "fileName": "Recording-encoded.mp4",
        "contentType": "video/quicktime"
      },
      "title": "Recording-encoded",
      "description": "",
      "node_locale": "en-AU",
      "internal": {
        "type": "ContentfulAsset",
        "contentDigest": "f39d791ff2b15ffc06ba4da6d0ea732d",
        "owner": "gatsby-source-contentful"
      }
    },
    "8f8938e7-4be2-5d65-b93c-487fd352fbe3": {
      "contentful_id": "5zIFeiT7e8wTM21ZLhYG4F",
      "id": "8f8938e7-4be2-5d65-b93c-487fd352fbe3",
      "parent": null,
      "children": [],
      "file": {
        "url": "//images.ctfassets.net/u434ytvnd3bo/5zIFeiT7e8wTM21ZLhYG4F/90d7471cd04babb8c9ac3be45982702a/raspberry-node.gif",
        "details": {
          "size": 3280330,
          "image": {
            "width": 834,
            "height": 360
          }
        },
        "fileName": "raspberry-node.gif",
        "contentType": "image/gif"
      },
      "title": "raspberry-node",
      "description": "",
      "node_locale": "en-AU",
      "internal": {
        "type": "ContentfulAsset",
        "contentDigest": "fe75a603be84d07f56237e4d07fc5954",
        "owner": "gatsby-source-contentful"
      }
    },
    "18edb6d1-c54b-5e6e-99b1-baeeac871941": {
      "id": "18edb6d1-c54b-5e6e-99b1-baeeac871941",
      "parent": "2010fc40-2bad-59fd-a4f9-4072fa2bf6b9",
      "children": [
        "e8edbb7b-456d-5237-862c-6f51bf833973"
      ],
      "post": "I have been interested in making a VS Code theme for a while now and I started looking into it and saw an article by Sarah Drasner on CSS Tricks which got the ball rolling. \n\nGoing through some more articles and I got the ball rolling for raspberryCandy, my neon/pastel theme. The name comes from my favorite blend of coffee from ONA in Marrickville, Australia.\n\n![screenShot](//images.ctfassets.net/u434ytvnd3bo/2RH3azl2Z6YFdiXblptspp/ca7ef56f44963f787b4b8775353363a0/screenShot.png)\n\nAnd now it's all done! I am really happy with how it has turned out, It has been a really good project to work on. \n\nBelow is a list of the links I used that helped me get it into the marketplace.\n\n- [Creating a VS Code Theme - Sarah Drasner - CSS Tricks](https://css-tricks.com/creating-a-vs-code-theme/?fbclid=IwAR1qhdXb01kZdZZn8HB5KY0nLtRCRobG21u1BxGAxG2xoLYp7HRcpRN1SiE \"Sarah Drasner's Article on building a VS Code theme for CSS Tricks\")\n\n- [VS Code Docs (Really helpful with all the detail of interactions and what changes what.](https://code.visualstudio.com/api/references/theme-color?fbclid=IwAR1aId1wnpMRtGQOlEP7A1UOOJebFOQm6nP8GpTfylEl2BKEgb4sYdAlfWo \"VS Code Docs\") \n\n- [VS Code Extension Manifest (List of all the things that are needed and optional in a theme package)](https://code.visualstudio.com/api/references/extension-manifest?fbclid=IwAR2omxhZzfqPQfD08SqOHlSdXRPOocZvfYA5n-2FBeM0Dk-WAoeLAS9H46w \"VS Code Extension Manifest.\") ",
      "internal": {
        "type": "contentfulTomWritesCodeBlogPostTextNode",
        "mediaType": "text/markdown",
        "content": "I have been interested in making a VS Code theme for a while now and I started looking into it and saw an article by Sarah Drasner on CSS Tricks which got the ball rolling. \n\nGoing through some more articles and I got the ball rolling for raspberryCandy, my neon/pastel theme. The name comes from my favorite blend of coffee from ONA in Marrickville, Australia.\n\n![screenShot](//images.ctfassets.net/u434ytvnd3bo/2RH3azl2Z6YFdiXblptspp/ca7ef56f44963f787b4b8775353363a0/screenShot.png)\n\nAnd now it's all done! I am really happy with how it has turned out, It has been a really good project to work on. \n\nBelow is a list of the links I used that helped me get it into the marketplace.\n\n- [Creating a VS Code Theme - Sarah Drasner - CSS Tricks](https://css-tricks.com/creating-a-vs-code-theme/?fbclid=IwAR1qhdXb01kZdZZn8HB5KY0nLtRCRobG21u1BxGAxG2xoLYp7HRcpRN1SiE \"Sarah Drasner's Article on building a VS Code theme for CSS Tricks\")\n\n- [VS Code Docs (Really helpful with all the detail of interactions and what changes what.](https://code.visualstudio.com/api/references/theme-color?fbclid=IwAR1aId1wnpMRtGQOlEP7A1UOOJebFOQm6nP8GpTfylEl2BKEgb4sYdAlfWo \"VS Code Docs\") \n\n- [VS Code Extension Manifest (List of all the things that are needed and optional in a theme package)](https://code.visualstudio.com/api/references/extension-manifest?fbclid=IwAR2omxhZzfqPQfD08SqOHlSdXRPOocZvfYA5n-2FBeM0Dk-WAoeLAS9H46w \"VS Code Extension Manifest.\") ",
        "contentDigest": "8cf08740a85875b52e8471455e8a8c03",
        "owner": "gatsby-source-contentful"
      }
    },
    "e8edbb7b-456d-5237-862c-6f51bf833973": {
      "id": "e8edbb7b-456d-5237-862c-6f51bf833973",
      "children": [],
      "parent": "18edb6d1-c54b-5e6e-99b1-baeeac871941",
      "internal": {
        "content": "I have been interested in making a VS Code theme for a while now and I started looking into it and saw an article by Sarah Drasner on CSS Tricks which got the ball rolling. \n\nGoing through some more articles and I got the ball rolling for raspberryCandy, my neon/pastel theme. The name comes from my favorite blend of coffee from ONA in Marrickville, Australia.\n\n![screenShot](//images.ctfassets.net/u434ytvnd3bo/2RH3azl2Z6YFdiXblptspp/ca7ef56f44963f787b4b8775353363a0/screenShot.png)\n\nAnd now it's all done! I am really happy with how it has turned out, It has been a really good project to work on. \n\nBelow is a list of the links I used that helped me get it into the marketplace.\n\n- [Creating a VS Code Theme - Sarah Drasner - CSS Tricks](https://css-tricks.com/creating-a-vs-code-theme/?fbclid=IwAR1qhdXb01kZdZZn8HB5KY0nLtRCRobG21u1BxGAxG2xoLYp7HRcpRN1SiE \"Sarah Drasner's Article on building a VS Code theme for CSS Tricks\")\n\n- [VS Code Docs (Really helpful with all the detail of interactions and what changes what.](https://code.visualstudio.com/api/references/theme-color?fbclid=IwAR1aId1wnpMRtGQOlEP7A1UOOJebFOQm6nP8GpTfylEl2BKEgb4sYdAlfWo \"VS Code Docs\") \n\n- [VS Code Extension Manifest (List of all the things that are needed and optional in a theme package)](https://code.visualstudio.com/api/references/extension-manifest?fbclid=IwAR2omxhZzfqPQfD08SqOHlSdXRPOocZvfYA5n-2FBeM0Dk-WAoeLAS9H46w \"VS Code Extension Manifest.\") ",
        "type": "MarkdownRemark",
        "contentDigest": "fb9afc7c8c09cabeb24a814a614b7fe6",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "",
        "_PARENT": "18edb6d1-c54b-5e6e-99b1-baeeac871941"
      },
      "excerpt": "",
      "rawMarkdownBody": "I have been interested in making a VS Code theme for a while now and I started looking into it and saw an article by Sarah Drasner on CSS Tricks which got the ball rolling. \n\nGoing through some more articles and I got the ball rolling for raspberryCandy, my neon/pastel theme. The name comes from my favorite blend of coffee from ONA in Marrickville, Australia.\n\n![screenShot](//images.ctfassets.net/u434ytvnd3bo/2RH3azl2Z6YFdiXblptspp/ca7ef56f44963f787b4b8775353363a0/screenShot.png)\n\nAnd now it's all done! I am really happy with how it has turned out, It has been a really good project to work on. \n\nBelow is a list of the links I used that helped me get it into the marketplace.\n\n- [Creating a VS Code Theme - Sarah Drasner - CSS Tricks](https://css-tricks.com/creating-a-vs-code-theme/?fbclid=IwAR1qhdXb01kZdZZn8HB5KY0nLtRCRobG21u1BxGAxG2xoLYp7HRcpRN1SiE \"Sarah Drasner's Article on building a VS Code theme for CSS Tricks\")\n\n- [VS Code Docs (Really helpful with all the detail of interactions and what changes what.](https://code.visualstudio.com/api/references/theme-color?fbclid=IwAR1aId1wnpMRtGQOlEP7A1UOOJebFOQm6nP8GpTfylEl2BKEgb4sYdAlfWo \"VS Code Docs\") \n\n- [VS Code Extension Manifest (List of all the things that are needed and optional in a theme package)](https://code.visualstudio.com/api/references/extension-manifest?fbclid=IwAR2omxhZzfqPQfD08SqOHlSdXRPOocZvfYA5n-2FBeM0Dk-WAoeLAS9H46w \"VS Code Extension Manifest.\") "
    },
    "39b96c2b-d492-51e8-a32f-87ec79ef3f2d": {
      "title": "raspberryCandy web scraper with NodeJS",
      "slug": "raspberrycandy-web-scraper-with-nodejs",
      "date": "2019-04-08",
      "intro": "Making the VS Code theme raspberryCandy was an awesome project and the novelty of checking the webpage everyday to see the number of downloads still hasn't worn off and I learnt how to make a scraper of the web page to show me how many downloads I have. ",
      "post___NODE": "6f7ce7dd-7484-55ee-93af-5947eaf31057",
      "id": "39b96c2b-d492-51e8-a32f-87ec79ef3f2d",
      "contentful_id": "3JmXgYZ7celmZc7EFwacK4",
      "createdAt": "2019-05-14T08:30:43.174Z",
      "updatedAt": "2019-05-14T08:30:43.174Z",
      "parent": "tomWritesCode Blog",
      "children": [
        "6f7ce7dd-7484-55ee-93af-5947eaf31057"
      ],
      "internal": {
        "type": "ContentfulTomWritesCodeBlog",
        "contentDigest": "023b8f6c26f9bb6571a268d61be2f6ac",
        "owner": "gatsby-source-contentful"
      },
      "node_locale": "en-AU"
    },
    "6f7ce7dd-7484-55ee-93af-5947eaf31057": {
      "id": "6f7ce7dd-7484-55ee-93af-5947eaf31057",
      "parent": "39b96c2b-d492-51e8-a32f-87ec79ef3f2d",
      "children": [
        "340eaf58-9e44-584a-a696-d9a7743a9371"
      ],
      "post": "Going through a few tutorials that showed how to make a Node app that from my terminal will show me the number of downloads I have had, as well as doing the math on how long raspberryCandy has been released for. \n\nI went through [this article from scotch.io](https://scotch.io/tutorials/scraping-the-web-with-node-js) which used NodeJS, Cheerio and request-promise.\n\n---\n\n__- request-promise -__ *Makes the HTTP request which supports promises. The extension of the standard request promise.*\n  \n__- Cheerio -__ *Helps to traverse the DOM letting us select parts of the page we would like to extract.*\n\n---\n\nFiglet is a great package for making ASCII art from text and has a library of different ways to do so. Chalk is used to colour the text of the response in the terminal which means I could keep the raspberryCandy colours being returned. \n\nThe first part of my code is making the piece that looks after displaying when raspberryCandy was released and how many days it has been released for which sits below the number of downloads in the command line result. To do this all I used was the Date function built into Javascript, making one of the dates the release which I already knew and wasnt going to change just put it straight in. And then another date which is the date and time that the function is called.\n\n---\n\n    const release = new Date(\"February 19, 2019 11:46:11\");\n    const current = new Date();\n\n---\n\nFollowing that I made a function which calculates how many days raspberryCandy has been out. The function works in two steps, firslty it subtracts the release date from the current date which then gives us the amount of time bwtween the dates but in Milliseconds (which isn't the most readable).\n\n---\n    \n    function dateDiff() {\n        \tlet difference = current - release;\n     }     \n\n---\n\nStep two of the function takes the result in milliseconds and divides it by the math that converts milliseconds to days. This is wrapped in a Math.round() function to give whole days as a return without a decimal.\n\n\n---\n\n    function dateDiff() {\n    \tlet difference = current - release;\n    \treturn Math.round(difference / (60 * 60 * 24 * 1000));\n}\n    \n---\n\nNow for the main party trick, scraping the marketplace page for raspberryCandy to get the number of downloads. This is where we use the request-promise package and give it the target url which in this case is the page on the Visual Studio Marketplace.\n\nInspecting the page prior to building this I found that the piece I was after was a span with the class name 'downloads-text'. Using Cheerio I can target the span with the right class name from the HTML document and then return it as plain text. Below I have laid out the basic structure of what it is doing. \n\n---\n\n    request-promise(URL).then(function(html) \n      {\n        cheerio(\"span.downloads-text\", html).text()\n      }\n\n---\n\nNow that we have the heavy lifting out of the way the structure comes into play. In my example I have wrapped each of the console.log() returns with the Chalk package allowing me to set the colour, in this case I am going with the Purple and Aqua colours of raspberryCandy.\n\n___\n\n    console.log(\n      chalk.hex(\"#e592faff\").bold(\" WOW! raspberryCandy has:\")\n    );\n___\n\nThe other extra piece is using Figlet which gives me the ASCII art, this wraps around the Cherrio function and takes the properties of what font to use, as well as the horizontal and vertical layouts. \n\n___\n\n    console.log(\n      chalk.hex(\"#00feff\")(\n        figlet.textSync($(\"span.downloads-text\", html).text(), {\n          font: \"Big\",\n          horizontalLayout: \"default\",\n          verticalLayout: \"default\"\n        })\n      )\n    );\n___\n\nNow that it's all pieced together the last thing left to do was to link it to my terminal as a single command rather than having to go to the file system and run the JS file. To do this, we add a line to the top of the file which will let us add our command to the package.json.\n\n___\n\n    #!/usr/bin/env node\n___\n\nThis line will let it be triggered as a Node command and run. This will also let the next part we add to the package.json work. Inside the package.json I have added:\n\n___\n\n    \"bin\": {\n      \"raspberry\": \"./raspberryScraper.js\"\n    },\n\n___\n\nFinal step is to run *__npm link__* in the terminal while in the folder. This takes the bin command, in this case *__\"raspberry\"__* and then launches the command *__\"./raspberryScraper.js\"__*. This is similar to any short hand command like *__npm run start__* or *__gatsby develop__*.\n\nNow I have a working NodeJS web scraper that lets me run it from anywhere in my terminal.\n\n![Large GIF 912x276](//images.ctfassets.net/u434ytvnd3bo/5XQ2c9F4uB37GT0jnBWrZP/79b58c210c0d4268a47e6af7f4ac4bce/Large_GIF_912x276.gif)\n___\n\n## Links\n\n### - [__Scotch.io article I got most of the resources from.__](https://scotch.io/tutorials/scraping-the-web-with-node-js \"Scotch.io Article\")\n### - [__request-promise GitHub page__](https://github.com/request/request-promise \"request-promise GitHub Page\")\n### - [__Cheerio GitHub page__](https://github.com/cheeriojs/cheerio \"Cheerio GitHub Page\")\n### - [__Figlet NPM page__](https://www.npmjs.com/package/figlet \"Figlet NPM Page\")\n### - [__My GitHub page of the scraper__](https://github.com/tomWritesCode/raspberryScraper \"tomWritesCode GitHub source code\")\n",
      "internal": {
        "type": "contentfulTomWritesCodeBlogPostTextNode",
        "mediaType": "text/markdown",
        "content": "Going through a few tutorials that showed how to make a Node app that from my terminal will show me the number of downloads I have had, as well as doing the math on how long raspberryCandy has been released for. \n\nI went through [this article from scotch.io](https://scotch.io/tutorials/scraping-the-web-with-node-js) which used NodeJS, Cheerio and request-promise.\n\n---\n\n__- request-promise -__ *Makes the HTTP request which supports promises. The extension of the standard request promise.*\n  \n__- Cheerio -__ *Helps to traverse the DOM letting us select parts of the page we would like to extract.*\n\n---\n\nFiglet is a great package for making ASCII art from text and has a library of different ways to do so. Chalk is used to colour the text of the response in the terminal which means I could keep the raspberryCandy colours being returned. \n\nThe first part of my code is making the piece that looks after displaying when raspberryCandy was released and how many days it has been released for which sits below the number of downloads in the command line result. To do this all I used was the Date function built into Javascript, making one of the dates the release which I already knew and wasnt going to change just put it straight in. And then another date which is the date and time that the function is called.\n\n---\n\n    const release = new Date(\"February 19, 2019 11:46:11\");\n    const current = new Date();\n\n---\n\nFollowing that I made a function which calculates how many days raspberryCandy has been out. The function works in two steps, firslty it subtracts the release date from the current date which then gives us the amount of time bwtween the dates but in Milliseconds (which isn't the most readable).\n\n---\n    \n    function dateDiff() {\n        \tlet difference = current - release;\n     }     \n\n---\n\nStep two of the function takes the result in milliseconds and divides it by the math that converts milliseconds to days. This is wrapped in a Math.round() function to give whole days as a return without a decimal.\n\n\n---\n\n    function dateDiff() {\n    \tlet difference = current - release;\n    \treturn Math.round(difference / (60 * 60 * 24 * 1000));\n}\n    \n---\n\nNow for the main party trick, scraping the marketplace page for raspberryCandy to get the number of downloads. This is where we use the request-promise package and give it the target url which in this case is the page on the Visual Studio Marketplace.\n\nInspecting the page prior to building this I found that the piece I was after was a span with the class name 'downloads-text'. Using Cheerio I can target the span with the right class name from the HTML document and then return it as plain text. Below I have laid out the basic structure of what it is doing. \n\n---\n\n    request-promise(URL).then(function(html) \n      {\n        cheerio(\"span.downloads-text\", html).text()\n      }\n\n---\n\nNow that we have the heavy lifting out of the way the structure comes into play. In my example I have wrapped each of the console.log() returns with the Chalk package allowing me to set the colour, in this case I am going with the Purple and Aqua colours of raspberryCandy.\n\n___\n\n    console.log(\n      chalk.hex(\"#e592faff\").bold(\" WOW! raspberryCandy has:\")\n    );\n___\n\nThe other extra piece is using Figlet which gives me the ASCII art, this wraps around the Cherrio function and takes the properties of what font to use, as well as the horizontal and vertical layouts. \n\n___\n\n    console.log(\n      chalk.hex(\"#00feff\")(\n        figlet.textSync($(\"span.downloads-text\", html).text(), {\n          font: \"Big\",\n          horizontalLayout: \"default\",\n          verticalLayout: \"default\"\n        })\n      )\n    );\n___\n\nNow that it's all pieced together the last thing left to do was to link it to my terminal as a single command rather than having to go to the file system and run the JS file. To do this, we add a line to the top of the file which will let us add our command to the package.json.\n\n___\n\n    #!/usr/bin/env node\n___\n\nThis line will let it be triggered as a Node command and run. This will also let the next part we add to the package.json work. Inside the package.json I have added:\n\n___\n\n    \"bin\": {\n      \"raspberry\": \"./raspberryScraper.js\"\n    },\n\n___\n\nFinal step is to run *__npm link__* in the terminal while in the folder. This takes the bin command, in this case *__\"raspberry\"__* and then launches the command *__\"./raspberryScraper.js\"__*. This is similar to any short hand command like *__npm run start__* or *__gatsby develop__*.\n\nNow I have a working NodeJS web scraper that lets me run it from anywhere in my terminal.\n\n![Large GIF 912x276](//images.ctfassets.net/u434ytvnd3bo/5XQ2c9F4uB37GT0jnBWrZP/79b58c210c0d4268a47e6af7f4ac4bce/Large_GIF_912x276.gif)\n___\n\n## Links\n\n### - [__Scotch.io article I got most of the resources from.__](https://scotch.io/tutorials/scraping-the-web-with-node-js \"Scotch.io Article\")\n### - [__request-promise GitHub page__](https://github.com/request/request-promise \"request-promise GitHub Page\")\n### - [__Cheerio GitHub page__](https://github.com/cheeriojs/cheerio \"Cheerio GitHub Page\")\n### - [__Figlet NPM page__](https://www.npmjs.com/package/figlet \"Figlet NPM Page\")\n### - [__My GitHub page of the scraper__](https://github.com/tomWritesCode/raspberryScraper \"tomWritesCode GitHub source code\")\n",
        "contentDigest": "db2b15a39859e012e6f7a6b73bde0127",
        "owner": "gatsby-source-contentful"
      }
    },
    "0fd65a25-54b0-5260-875b-fda896087869": {
      "contentful_id": "5XQ2c9F4uB37GT0jnBWrZP",
      "id": "0fd65a25-54b0-5260-875b-fda896087869",
      "parent": null,
      "children": [],
      "file": {
        "url": "//images.ctfassets.net/u434ytvnd3bo/5XQ2c9F4uB37GT0jnBWrZP/79b58c210c0d4268a47e6af7f4ac4bce/Large_GIF_912x276.gif",
        "details": {
          "size": 1830448,
          "image": {
            "width": 912,
            "height": 276
          }
        },
        "fileName": "Large_GIF_912x276.gif",
        "contentType": "image/gif"
      },
      "title": "Large GIF 912x276",
      "description": "",
      "node_locale": "en-AU",
      "internal": {
        "type": "ContentfulAsset",
        "contentDigest": "8ce11b1dcaddfc54eb2498c93b3a9a06",
        "owner": "gatsby-source-contentful"
      }
    },
    "340eaf58-9e44-584a-a696-d9a7743a9371": {
      "id": "340eaf58-9e44-584a-a696-d9a7743a9371",
      "children": [],
      "parent": "6f7ce7dd-7484-55ee-93af-5947eaf31057",
      "internal": {
        "content": "Going through a few tutorials that showed how to make a Node app that from my terminal will show me the number of downloads I have had, as well as doing the math on how long raspberryCandy has been released for. \n\nI went through [this article from scotch.io](https://scotch.io/tutorials/scraping-the-web-with-node-js) which used NodeJS, Cheerio and request-promise.\n\n---\n\n__- request-promise -__ *Makes the HTTP request which supports promises. The extension of the standard request promise.*\n  \n__- Cheerio -__ *Helps to traverse the DOM letting us select parts of the page we would like to extract.*\n\n---\n\nFiglet is a great package for making ASCII art from text and has a library of different ways to do so. Chalk is used to colour the text of the response in the terminal which means I could keep the raspberryCandy colours being returned. \n\nThe first part of my code is making the piece that looks after displaying when raspberryCandy was released and how many days it has been released for which sits below the number of downloads in the command line result. To do this all I used was the Date function built into Javascript, making one of the dates the release which I already knew and wasnt going to change just put it straight in. And then another date which is the date and time that the function is called.\n\n---\n\n    const release = new Date(\"February 19, 2019 11:46:11\");\n    const current = new Date();\n\n---\n\nFollowing that I made a function which calculates how many days raspberryCandy has been out. The function works in two steps, firslty it subtracts the release date from the current date which then gives us the amount of time bwtween the dates but in Milliseconds (which isn't the most readable).\n\n---\n    \n    function dateDiff() {\n        \tlet difference = current - release;\n     }     \n\n---\n\nStep two of the function takes the result in milliseconds and divides it by the math that converts milliseconds to days. This is wrapped in a Math.round() function to give whole days as a return without a decimal.\n\n\n---\n\n    function dateDiff() {\n    \tlet difference = current - release;\n    \treturn Math.round(difference / (60 * 60 * 24 * 1000));\n}\n    \n---\n\nNow for the main party trick, scraping the marketplace page for raspberryCandy to get the number of downloads. This is where we use the request-promise package and give it the target url which in this case is the page on the Visual Studio Marketplace.\n\nInspecting the page prior to building this I found that the piece I was after was a span with the class name 'downloads-text'. Using Cheerio I can target the span with the right class name from the HTML document and then return it as plain text. Below I have laid out the basic structure of what it is doing. \n\n---\n\n    request-promise(URL).then(function(html) \n      {\n        cheerio(\"span.downloads-text\", html).text()\n      }\n\n---\n\nNow that we have the heavy lifting out of the way the structure comes into play. In my example I have wrapped each of the console.log() returns with the Chalk package allowing me to set the colour, in this case I am going with the Purple and Aqua colours of raspberryCandy.\n\n___\n\n    console.log(\n      chalk.hex(\"#e592faff\").bold(\" WOW! raspberryCandy has:\")\n    );\n___\n\nThe other extra piece is using Figlet which gives me the ASCII art, this wraps around the Cherrio function and takes the properties of what font to use, as well as the horizontal and vertical layouts. \n\n___\n\n    console.log(\n      chalk.hex(\"#00feff\")(\n        figlet.textSync($(\"span.downloads-text\", html).text(), {\n          font: \"Big\",\n          horizontalLayout: \"default\",\n          verticalLayout: \"default\"\n        })\n      )\n    );\n___\n\nNow that it's all pieced together the last thing left to do was to link it to my terminal as a single command rather than having to go to the file system and run the JS file. To do this, we add a line to the top of the file which will let us add our command to the package.json.\n\n___\n\n    #!/usr/bin/env node\n___\n\nThis line will let it be triggered as a Node command and run. This will also let the next part we add to the package.json work. Inside the package.json I have added:\n\n___\n\n    \"bin\": {\n      \"raspberry\": \"./raspberryScraper.js\"\n    },\n\n___\n\nFinal step is to run *__npm link__* in the terminal while in the folder. This takes the bin command, in this case *__\"raspberry\"__* and then launches the command *__\"./raspberryScraper.js\"__*. This is similar to any short hand command like *__npm run start__* or *__gatsby develop__*.\n\nNow I have a working NodeJS web scraper that lets me run it from anywhere in my terminal.\n\n![Large GIF 912x276](//images.ctfassets.net/u434ytvnd3bo/5XQ2c9F4uB37GT0jnBWrZP/79b58c210c0d4268a47e6af7f4ac4bce/Large_GIF_912x276.gif)\n___\n\n## Links\n\n### - [__Scotch.io article I got most of the resources from.__](https://scotch.io/tutorials/scraping-the-web-with-node-js \"Scotch.io Article\")\n### - [__request-promise GitHub page__](https://github.com/request/request-promise \"request-promise GitHub Page\")\n### - [__Cheerio GitHub page__](https://github.com/cheeriojs/cheerio \"Cheerio GitHub Page\")\n### - [__Figlet NPM page__](https://www.npmjs.com/package/figlet \"Figlet NPM Page\")\n### - [__My GitHub page of the scraper__](https://github.com/tomWritesCode/raspberryScraper \"tomWritesCode GitHub source code\")\n",
        "type": "MarkdownRemark",
        "contentDigest": "ec21059b8390f6f91da10ed0a40e7a29",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "",
        "_PARENT": "6f7ce7dd-7484-55ee-93af-5947eaf31057"
      },
      "excerpt": "",
      "rawMarkdownBody": "Going through a few tutorials that showed how to make a Node app that from my terminal will show me the number of downloads I have had, as well as doing the math on how long raspberryCandy has been released for. \n\nI went through [this article from scotch.io](https://scotch.io/tutorials/scraping-the-web-with-node-js) which used NodeJS, Cheerio and request-promise.\n\n---\n\n__- request-promise -__ *Makes the HTTP request which supports promises. The extension of the standard request promise.*\n  \n__- Cheerio -__ *Helps to traverse the DOM letting us select parts of the page we would like to extract.*\n\n---\n\nFiglet is a great package for making ASCII art from text and has a library of different ways to do so. Chalk is used to colour the text of the response in the terminal which means I could keep the raspberryCandy colours being returned. \n\nThe first part of my code is making the piece that looks after displaying when raspberryCandy was released and how many days it has been released for which sits below the number of downloads in the command line result. To do this all I used was the Date function built into Javascript, making one of the dates the release which I already knew and wasnt going to change just put it straight in. And then another date which is the date and time that the function is called.\n\n---\n\n    const release = new Date(\"February 19, 2019 11:46:11\");\n    const current = new Date();\n\n---\n\nFollowing that I made a function which calculates how many days raspberryCandy has been out. The function works in two steps, firslty it subtracts the release date from the current date which then gives us the amount of time bwtween the dates but in Milliseconds (which isn't the most readable).\n\n---\n    \n    function dateDiff() {\n        \tlet difference = current - release;\n     }     \n\n---\n\nStep two of the function takes the result in milliseconds and divides it by the math that converts milliseconds to days. This is wrapped in a Math.round() function to give whole days as a return without a decimal.\n\n\n---\n\n    function dateDiff() {\n    \tlet difference = current - release;\n    \treturn Math.round(difference / (60 * 60 * 24 * 1000));\n}\n    \n---\n\nNow for the main party trick, scraping the marketplace page for raspberryCandy to get the number of downloads. This is where we use the request-promise package and give it the target url which in this case is the page on the Visual Studio Marketplace.\n\nInspecting the page prior to building this I found that the piece I was after was a span with the class name 'downloads-text'. Using Cheerio I can target the span with the right class name from the HTML document and then return it as plain text. Below I have laid out the basic structure of what it is doing. \n\n---\n\n    request-promise(URL).then(function(html) \n      {\n        cheerio(\"span.downloads-text\", html).text()\n      }\n\n---\n\nNow that we have the heavy lifting out of the way the structure comes into play. In my example I have wrapped each of the console.log() returns with the Chalk package allowing me to set the colour, in this case I am going with the Purple and Aqua colours of raspberryCandy.\n\n___\n\n    console.log(\n      chalk.hex(\"#e592faff\").bold(\" WOW! raspberryCandy has:\")\n    );\n___\n\nThe other extra piece is using Figlet which gives me the ASCII art, this wraps around the Cherrio function and takes the properties of what font to use, as well as the horizontal and vertical layouts. \n\n___\n\n    console.log(\n      chalk.hex(\"#00feff\")(\n        figlet.textSync($(\"span.downloads-text\", html).text(), {\n          font: \"Big\",\n          horizontalLayout: \"default\",\n          verticalLayout: \"default\"\n        })\n      )\n    );\n___\n\nNow that it's all pieced together the last thing left to do was to link it to my terminal as a single command rather than having to go to the file system and run the JS file. To do this, we add a line to the top of the file which will let us add our command to the package.json.\n\n___\n\n    #!/usr/bin/env node\n___\n\nThis line will let it be triggered as a Node command and run. This will also let the next part we add to the package.json work. Inside the package.json I have added:\n\n___\n\n    \"bin\": {\n      \"raspberry\": \"./raspberryScraper.js\"\n    },\n\n___\n\nFinal step is to run *__npm link__* in the terminal while in the folder. This takes the bin command, in this case *__\"raspberry\"__* and then launches the command *__\"./raspberryScraper.js\"__*. This is similar to any short hand command like *__npm run start__* or *__gatsby develop__*.\n\nNow I have a working NodeJS web scraper that lets me run it from anywhere in my terminal.\n\n![Large GIF 912x276](//images.ctfassets.net/u434ytvnd3bo/5XQ2c9F4uB37GT0jnBWrZP/79b58c210c0d4268a47e6af7f4ac4bce/Large_GIF_912x276.gif)\n___\n\n## Links\n\n### - [__Scotch.io article I got most of the resources from.__](https://scotch.io/tutorials/scraping-the-web-with-node-js \"Scotch.io Article\")\n### - [__request-promise GitHub page__](https://github.com/request/request-promise \"request-promise GitHub Page\")\n### - [__Cheerio GitHub page__](https://github.com/cheeriojs/cheerio \"Cheerio GitHub Page\")\n### - [__Figlet NPM page__](https://www.npmjs.com/package/figlet \"Figlet NPM Page\")\n### - [__My GitHub page of the scraper__](https://github.com/tomWritesCode/raspberryScraper \"tomWritesCode GitHub source code\")\n"
    },
    "SitePage /raspberrycandy-web-scraper-with-nodejs": {
      "jsonName": "raspberrycandy-web-scraper-with-nodejs-df0",
      "internalComponentName": "ComponentRaspberrycandyWebScraperWithNodejs",
      "path": "/raspberrycandy-web-scraper-with-nodejs",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "componentChunkName": "component---src-components-post-layout-js",
      "context": {
        "slug": "raspberrycandy-web-scraper-with-nodejs"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "id": "SitePage /raspberrycandy-web-scraper-with-nodejs",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9cc429ba7b8be15600b8dae2982a2f75",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /raspberrycandy-i-made-a-vs-code-theme": {
      "jsonName": "raspberrycandy-i-made-a-vs-code-theme-e0f",
      "internalComponentName": "ComponentRaspberrycandyIMadeAVsCodeTheme",
      "path": "/raspberrycandy-i-made-a-vs-code-theme",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "componentChunkName": "component---src-components-post-layout-js",
      "context": {
        "slug": "raspberrycandy-i-made-a-vs-code-theme"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "id": "SitePage /raspberrycandy-i-made-a-vs-code-theme",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1ba81ee090ee952731260ed1b94c0da6",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /hosting-a-gatsby-site-on-zeit-now": {
      "jsonName": "hosting-a-gatsby-site-on-zeit-now-47a",
      "internalComponentName": "ComponentHostingAGatsbySiteOnZeitNow",
      "path": "/hosting-a-gatsby-site-on-zeit-now",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "componentChunkName": "component---src-components-post-layout-js",
      "context": {
        "slug": "hosting-a-gatsby-site-on-zeit-now"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "id": "SitePage /hosting-a-gatsby-site-on-zeit-now",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "079185c3c2263464f26fe54ad89ffbd6",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /wasnt-build-in-a-day": {
      "jsonName": "wasnt-build-in-a-day-b86",
      "internalComponentName": "ComponentWasntBuildInADay",
      "path": "/wasnt-build-in-a-day",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "componentChunkName": "component---src-components-post-layout-js",
      "context": {
        "slug": "wasnt-build-in-a-day"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js",
      "id": "SitePage /wasnt-build-in-a-day",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7b5fe7bb69f44853ed18eee0e8fa22f0",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404/": {
      "jsonName": "404-22d",
      "internalComponentName": "Component404",
      "path": "/404/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/404.js",
      "id": "SitePage /404/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d01983ed5eb959f5a5212e57331ac152",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /about/": {
      "jsonName": "about-f34",
      "internalComponentName": "ComponentAbout",
      "path": "/about/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/about.js",
      "componentChunkName": "component---src-pages-about-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/about.js",
      "id": "SitePage /about/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6c43591f4b29eaf5bfc9a8148896f709",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/": {
      "jsonName": "blog-f7a",
      "internalComponentName": "ComponentBlog",
      "path": "/blog/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/blog.js",
      "componentChunkName": "component---src-pages-blog-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/blog.js",
      "id": "SitePage /blog/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "93f37b821c95f579d63a18a232e905c4",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/": {
      "jsonName": "docs-7e8",
      "internalComponentName": "ComponentDocs",
      "path": "/docs/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/docs.js",
      "componentChunkName": "component---src-pages-docs-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/docs.js",
      "id": "SitePage /docs/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0a7ef89c35a25d13aa4be70f64ed4182",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /": {
      "jsonName": "index",
      "internalComponentName": "ComponentIndex",
      "path": "/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/index.js",
      "componentChunkName": "component---src-pages-index-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/index.js",
      "id": "SitePage /",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6e2983eaf5b769ed1bab54416f901433",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /otherHobbies/": {
      "jsonName": "other-hobbies-a3e",
      "internalComponentName": "ComponentOtherHobbies",
      "path": "/otherHobbies/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/otherHobbies.js",
      "componentChunkName": "component---src-pages-other-hobbies-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/otherHobbies.js",
      "id": "SitePage /otherHobbies/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bd98b40dd566613abdd3691c4b638bbd",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /yournextdev/": {
      "jsonName": "yournextdev-be3",
      "internalComponentName": "ComponentYournextdev",
      "path": "/yournextdev/",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/yournextdev.js",
      "componentChunkName": "component---src-pages-yournextdev-js",
      "context": {},
      "pluginCreator___NODE": "88db0ef3-6758-5082-a550-dec327bc044f",
      "pluginCreatorId": "88db0ef3-6758-5082-a550-dec327bc044f",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/yournextdev.js",
      "id": "SitePage /yournextdev/",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "de0cb97a9a7ddd1c2f32f5ef8f3c3637",
        "description": "88db0ef3-6758-5082-a550-dec327bc044f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404.html": {
      "jsonName": "404-html-516",
      "internalComponentName": "Component404Html",
      "path": "/404.html",
      "component": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
      "pluginCreatorId": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/404.js",
      "id": "SitePage /404.html",
      "parent": null,
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8276fbd4c8c83093fbc6da846fcea636",
        "description": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
        "owner": "internal-data-bridge"
      }
    }
  },
  "status": {
    "plugins": {
      "gatsby-source-contentful": {
        "u434ytvnd3bo-master-cdn.contentful.com": "w5ZGw6JFwqZmVcKsE8Kow4grw45QdybCvMOQXwnDoMKiwoDCoMKPSiPCgsK-w6tjYsK6WsK-wovCj8OUOE3Cu8OVw4rDgU3DlWQpWcKyAVrCqlvDjsK9IcKBCcKUwopQZsKewr7DpsKxXRljw6UBGDrChMOJczvCnn0"
      }
    },
    "PLUGINS_HASH": "3da1cf6622a4d49582098fb302ce3d57"
  },
  "componentDataDependencies": {
    "nodes": {
      "Site": [
        "sq--src-components-layout-js",
        "sq--src-components-layouts-home-layout-js",
        "sq--src-components-seo-js"
      ],
      "de2f9dd4-848f-5cc2-908d-3517fbc52c38": [
        "/hosting-a-gatsby-site-on-zeit-now",
        "sq--src-components-blog-list-js"
      ],
      "18edb6d1-c54b-5e6e-99b1-baeeac871941": [
        "/raspberrycandy-i-made-a-vs-code-theme",
        "sq--src-components-blog-list-js"
      ],
      "f7a03b09-afb6-5ca0-9ebe-b130e409c5e7": [
        "/wasnt-build-in-a-day",
        "sq--src-components-blog-list-js"
      ],
      "0cfaa59b-0be1-527e-a207-614b6904683f": [
        "/hosting-a-gatsby-site-on-zeit-now"
      ],
      "2010fc40-2bad-59fd-a4f9-4072fa2bf6b9": [
        "/raspberrycandy-i-made-a-vs-code-theme"
      ],
      "ae294ce9-ce65-57b7-89bb-415a4b6c6cb5": [
        "/hosting-a-gatsby-site-on-zeit-now"
      ],
      "e8edbb7b-456d-5237-862c-6f51bf833973": [
        "/raspberrycandy-i-made-a-vs-code-theme"
      ],
      "07b0e325-f7fd-5f3a-802a-c6b850300010": [
        "/wasnt-build-in-a-day"
      ],
      "5bb13972-4f48-5983-9c05-a264bf656036": [
        "/wasnt-build-in-a-day"
      ],
      "6f7ce7dd-7484-55ee-93af-5947eaf31057": [
        "/raspberrycandy-web-scraper-with-nodejs",
        "sq--src-components-blog-list-js"
      ],
      "39b96c2b-d492-51e8-a32f-87ec79ef3f2d": [
        "/raspberrycandy-web-scraper-with-nodejs"
      ],
      "340eaf58-9e44-584a-a696-d9a7743a9371": [
        "/raspberrycandy-web-scraper-with-nodejs"
      ]
    },
    "connections": {
      "ContentfulTomWritesCodeBlog": [
        null,
        null,
        "sq--src-components-blog-list-js"
      ],
      "MarkdownRemark": [
        "sq--src-components-docs-js"
      ]
    }
  },
  "jsonDataPaths": {
    "sq--src-components-image-js": 2011440971,
    "sq--src-components-blog-list-js": 2604983828,
    "sq--src-components-layout-js": 1415471421,
    "testing-1-154": "380/path---testing-1-154-003-cypYZ4D91Rv9AMBmiuVrkWDsIc",
    "wasnt-build-in-a-day-b86": "862/path---wasnt-build-in-a-day-b-86-799-Yim45ePvhGvVkJDEez8xzWwHVE",
    "testing-2-561": "903/path---testing-2-561-9fd-2G92HvuM99V0C1xDICy3Vit5uoQ",
    "sq--src-components-docs-js": 3771703249,
    "404-22d": "44/path---404-22-d-bce-NZuapzHg3X9TaN1iIixfv1W23E",
    "dev-404-page-5f9": "920/path---dev-404-page-5-f-9-fab-NZuapzHg3X9TaN1iIixfv1W23E",
    "about-f34": "125/path---about-f-34-4c2-NZuapzHg3X9TaN1iIixfv1W23E",
    "blog-f7a": "32/path---blog-f-7-a-05d-NZuapzHg3X9TaN1iIixfv1W23E",
    "docs-7e8": "30/path---docs-7-e-8-9d0-NZuapzHg3X9TaN1iIixfv1W23E",
    "index": "173/path---index-6a9-NZuapzHg3X9TaN1iIixfv1W23E",
    "other-hobbies-a3e": "220/path---other-hobbies-a-3-e-40e-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-html-516": "164/path---404-html-516-62a-NZuapzHg3X9TaN1iIixfv1W23E",
    "rdgdgstg-364": "907/path---rdgdgstg-364-372-LDlnDHOtT9A4aTnJxNedqFzsPDY",
    "test-3-8ad": "406/path---test-3-8-ad-653-C4OKjE6VXeLliYFLNuCyMCbg",
    "sq--src-components-contact-icons-js": 4054139054,
    "sq--src-components-home-layout-js": 3015029821,
    "sq--src-components-layouts-home-layout-js": 3015029821,
    "raspberrycandy-i-made-a-vs-code-theme-e0f": "211/path---raspberrycandy-i-made-a-vs-code-theme-e-0-f-ef3-zUrEQWvRjNsHS7KwD2p1hzyzrA",
    "sq--src-components-seo-js": 728552493,
    "hosting-a-gatsby-site-on-zeit-now-47a": "824/path---hosting-a-gatsby-site-on-zeit-now-47-a-ae7-X0nQtVPB3TWiJMY1SNpVj1O6Mk",
    "yournextdev-be3": "338/path---yournextdev-be-3-393-NZuapzHg3X9TaN1iIixfv1W23E",
    "raspberrycandy-web-scraper-with-nodejs-df0": "822/path---raspberrycandy-web-scraper-with-nodejs-df-0-7e3-JqwmJCcaW4JNHuCCPxhKhu1nBg"
  },
  "components": {
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js": {
      "query": "query PostQuery(\n  $slug: String!\n) {\n  contentfulTomWritesCodeBlog(slug: {eq: $slug}) {\n    title\n    date(formatString: \"DD-MMMM-YYYY\")\n    intro\n    post {\n      childMarkdownRemark {\n        html\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/PostLayout.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/404.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/404.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/about.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/about.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/blog.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/blog.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/docs.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/docs.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/index.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/index.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/otherHobbies.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/otherHobbies.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/.cache/dev-404-page.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/.cache/dev-404-page.js"
    },
    "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/yournextdev.js": {
      "query": "",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/pages/yournextdev.js"
    }
  },
  "staticQueryComponents": {
    "sq--src-components-blog-list-js": {
      "name": "BLOG_POST_QUERY",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/BlogList.js",
      "id": "sq--src-components-blog-list-js",
      "jsonName": "sq--src-components-blog-list-js",
      "query": "query BLOG_POST_QUERY {\n  allContentfulTomWritesCodeBlog(sort: {order: DESC, fields: [updatedAt]}) {\n    edges {\n      node {\n        intro\n        slug\n        title\n        updatedAt(formatString: \"DD-MMMM-YYYY\")\n        post {\n          post\n        }\n      }\n    }\n  }\n}\n",
      "hash": 2604983828
    },
    "sq--src-components-docs-js": {
      "name": "DocsQuery",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/Docs.js",
      "id": "sq--src-components-docs-js",
      "jsonName": "sq--src-components-docs-js",
      "query": "query DocsQuery {\n  allMarkdownRemark(filter: {frontmatter: {slug: {eq: \"/docs\"}}}) {\n    edges {\n      node {\n        frontmatter {\n          title\n          slug\n        }\n        html\n        id\n      }\n    }\n  }\n}\n",
      "hash": 3771703249
    },
    "sq--src-components-layout-js": {
      "name": "SiteTitleQuery",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/Layout.js",
      "id": "sq--src-components-layout-js",
      "jsonName": "sq--src-components-layout-js",
      "query": "query SiteTitleQuery {\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}\n",
      "hash": 1415471421
    },
    "sq--src-components-seo-js": {
      "name": "SEO",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/SEO.js",
      "id": "sq--src-components-seo-js",
      "jsonName": "sq--src-components-seo-js",
      "query": "query SEO {\n  site {\n    siteMetadata {\n      defaultTitle: title\n      defaultDescription: description\n      siteUrl: url\n      defaultImage: image\n      twitterUsername\n    }\n  }\n}\n",
      "hash": 728552493
    },
    "sq--src-components-layouts-home-layout-js": {
      "name": "HomeTitleQuery",
      "componentPath": "/Users/thomaswhitaker/Desktop/tomWritesCode/tomWritesCode/src/components/Layouts/HomeLayout.js",
      "id": "sq--src-components-layouts-home-layout-js",
      "jsonName": "sq--src-components-layouts-home-layout-js",
      "query": "query HomeTitleQuery {\n  site {\n    siteMetadata {\n      title\n      description\n    }\n  }\n}\n",
      "hash": 3015029821
    }
  }
}
{"expireTime":9007200802785280000,"key":"transformer-remark-markdown-html-ca1d5878a796c67ec100c4ac272a4c21--","val":"<h2>Hi my name is Tom, this is my site, and this is the how/what I used to build it.</h2>\n<p>All of the code for this site as well as most of the projects I talk about in here will be available at my <a href=\"https://github.com/tomWritesCode\">GitHub - tomWritesCode</a>, feel free to check them out and let me know what you think.</p>\n<hr>\n<h3>Whats on this page</h3>\n<ul>\n<li><strong>tomWritesCode</strong></li>\n<li><strong>dadJokes</strong></li>\n</ul>\n<h2>tomWritesCode</h2>\n<p>  This site is built in Gatsby, but as well as React and GraphQL being packaged with Gatsby I am also using Styled Components as well as Emotion because I wanted to see how it worked. Last but not least, Contentful for holding all my blog posts. </p>\n<pre><code class=\"language-javascript\">tomWritesCode = () => {\n  const React = true;\n  const GatsbyJS = true;\n  const Blog = Contentful;\n  const styling = StyledComponents;\n  const stylingAlso = Emotion;\n}\n</code></pre>\n<p>  The design and colour palette has been inspired by the awesome guide <a href=\"https://refactoringui.com/\">Refactoring UI</a> by <a href=\"https://twitter.com/adamwathan?lang=en\">Adam Wathan</a> &#x26; <a href=\"https://twitter.com/steveschoger?lang=en\">Steve Schroger</a></p>\n<hr>\n<h2>dadJokes() - <a href=\"https://github.com/tomWritesCode/dadJokes\">Check out the codebase</a></h2>\n<p>  This doesn't need to exist, but here it is anyway. There was a running joke at the Code Heart Design Conference that we needed dad jokes in between the silence of people switching laptops. This was made the very next day. </p>\n<p>  Built in Gatsby because that is what I always reach for when I want to make something quickly. </p>\n<p>  The main logic behind it working is the array of objects in JokeList.js:</p>\n<pre><code class=\"language-javascript\">  const JokeList = [\n    {\n      joke: `Did you hear about the restaurant on the moon?`,\n      punchLine: `Great food, no atmosphere.`,\n    },\n  ]\n</code></pre>\n<p>  This is then used by the JokeGenerator.js file when someone presses the 'Just one more.' button which triggers the NewJoke() function:</p>\n<pre><code class=\"language-javascript\">function NewJoke() {\n// jokeGenerator();\n  const returnedJoke = jokeGenerator()\n// Will not generate joke twice in a row\n  document.getElementById('Joke').innerHTML = returnedJoke.joke\n  document.getElementById('Punchline').innerHTML = returnedJoke.punchLine\n}\n</code></pre>\n<p>  The JokeGenerator function runs first which generates a random Integer based on how long the array of jokes is. </p>\n<pre><code class=\"language-javascript\">  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n\n  function jokeGenerator() {\n    return JokeList[getRandomInt(JokeList.length)]\n  }\n</code></pre>\n<p>  Once that has been done the selected joke is then set into the joke and punchline sections of the page. </p>\n<hr>"}
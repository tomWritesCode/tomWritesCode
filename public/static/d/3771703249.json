{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"tomWritesCode - How I build the things.","slug":"/docs"},"html":"<h2>Hi my name is Tom, this is my site, and this is the how/what I used to build it.</h2>\n<p>All of the code for this site as well as most of the projects I talk about in here will be available at my <a href=\"https://github.com/tomWritesCode\">GitHub - tomWritesCode</a>, feel free to check them out and let me know what you think.</p>\n<hr>\n<h2>raspberryCandy - <a href=\"https://marketplace.visualstudio.com/items?itemName=tomWritesCode.raspberryCandy\" target=\"_blank\">VS Code Marketplace</a></h2>\n<p>This theme was inspired by my love of dark coding themes, Sarah Drasner's Night Owl theme, Wes Bos' Cobalt2 theme and Scott Tolinski's LevelUp Official Theme.</p>\n<p>The name of this comes from ONA Cafe in Marrickville in Sydney, Australia. My favorite roast they have is called Raspberry Candy and I have had way too many of those while at that cafe.</p>\n<p><img src=\"https://res.cloudinary.com/tomwritescode/image/upload/v1550563515/Screenshot2.png\" alt=\"raspberryCandy Theme\"></p>\n<hr>\n<h2>raspberryCandy NodeJS Web Scraper</h2>\n<p>After making the raspberryCandy VS Code theme, I had and still have the huge novelty of checking daily to see how many downloads it has.</p>\n<p>As a little side project I wanted to learn how to make a Node CLI tool and decided to roll that want with a way to check the downloads of my theme. </p>\n<p>I found a tutorial that went through making a web scraper and adapted it to use the VS Code Marketplace page of raspberryCandy, find the styling tag of the number of downloads and then pull the text from it. </p>\n<p>Then using Chalk, Figlet, Request Promise and Cheerio I would return the result to the terminal as well as a small math calculation which worked out how many days the theme has been released. I then added the command 'raspberry' to the project so that the command can be run straight from my terminal from any directory. </p>\n<p>A small project that only really has relevance for me but gave me a great understanding of working in a small NodeJS environment and making a CLI tool. </p>\n<p><img src=\"https://res.cloudinary.com/tomwritescode/image/upload/v1555478402/Screen_Shot_2019-04-17_at_8.43.53_am.png\" alt=\"raspberryCandy Web Scraper\"></p>\n<hr>\n<h2>Basketball NoStarz - <a href=\"https://no-starz.tomwritescode.now.sh/\" target=\"_blank\">Check out the project</a></h2>\n<p> I have been playing basketball with my brother on my my days off and wanted a way to track our scores, that night this project started.</p>\n<p> The original concept was a quick Gatsby knock up to make sure it worked. Once I worked out the base way of how I wanted to do it I decided to use NextJS, Emotion, Zeit's Now hosting platform to build it.</p>\n<p> The main part of the project uses a lot of state and I plan to start learning and using Redux now that I have the concept of the project running and usable, among this there is also a large list of things I would like to work on and add to the project.</p>\n<p> For me this is a really awesome project that constantly has room to grow and add new ideas and features really giving me a great platform to have as a constantly growing app.</p>\n<p><img src=\"https://res.cloudinary.com/tomwritescode/image/upload/v1555541786/nostarz.gif\" alt=\"Basketball NoStarz\"></p>\n<hr>\n<h2>dadJokes() - <a href=\"https://jokesfromyourdad.netlify.com\" target=\"_blank\">Check out the project</a></h2>\n<p>This doesn't need to exist, but here it is anyway. There was a running joke at the Code Heart Design Conference that we needed dad jokes in between the silence of people switching laptops. This was made the very next day.</p>\n<p>Built in Gatsby because that is what I always reach for when I want to make something quickly.</p>\n<p>The main logic behind it working is the array of objects in JokeList.js:</p>\n<pre><code class=\"language-javascript\">const JokeList = [\n\n{\n\njoke: `Did you hear about the restaurant on the moon?`,\n\npunchLine: `Great food, no atmosphere.`,\n\n},\n\n]\n</code></pre>\n<p>This is then used by the JokeGenerator.js file when someone presses the 'Just one more.' button which triggers the NewJoke() function:</p>\n<pre><code class=\"language-javascript\">function NewJoke() {\n\n*// jokeGenerator();*\n\nconst returnedJoke = jokeGenerator()\n\n*// Will not generate joke twice in a row*\n\ndocument.getElementById('Joke').innerHTML = returnedJoke.joke\n\ndocument.getElementById('Punchline').innerHTML = returnedJoke.punchLine\n\n}\n</code></pre>\n<p>The JokeGenerator function runs first which generates a random Integer based on how long the array of jokes is.</p>\n<pre><code class=\"language-javascript\">function getRandomInt(max) {\n\nreturn Math.floor(Math.random() * Math.floor(max))\n\n}\n\nfunction jokeGenerator() {\n\nreturn JokeList[getRandomInt(JokeList.length)]\n\n}\n</code></pre>\n<hr>\n<h2>tomWritesCode - <a href=\"https://github.com/tomWritesCode/tomWritesCode\" target=\"_blank\">Check out the codebase</a></h2>\n<p>This site is built in Gatsby, but as well as React and GraphQL being packaged with Gatsby I am also using Styled Components as well as Emotion because I wanted to see how it worked. Last but not least, Contentful for holding all my blog posts.</p>\n<pre><code class=\"language-javascript\">tomWritesCode = () => {\n\nconst React = true;\n\nconst GatsbyJS = true;\n\nconst Blog = 'Contentful';\n\nconst Docs = 'Markdown Remark';\n\nconst styling = 'Styled Components';\n\nconst stylingAlso = 'Emotion';\n\n}\n</code></pre>\n<hr>\n<p>Once that has been done the selected joke is then set into the joke and punchline sections of the page.</p>","id":"5fb604b8-aab9-54db-adf9-8d309c8f2786"}}]}}}